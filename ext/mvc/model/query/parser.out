 State 0:
          program ::= * query_language
          query_language ::= * select_statement
          query_language ::= * insert_statement
          query_language ::= * update_statement
          query_language ::= * delete_statement
          select_statement ::= * select_clause
          select_statement ::= * select_clause where_clause
          select_statement ::= * select_clause where_clause order_clause
          select_statement ::= * select_clause where_clause group_clause
          select_statement ::= * select_clause where_clause group_clause having_clause
          select_statement ::= * select_clause where_clause group_clause order_clause
          select_statement ::= * select_clause where_clause group_clause order_clause select_limit_clause
          select_statement ::= * select_clause where_clause group_clause having_clause order_clause
          select_statement ::= * select_clause where_clause select_limit_clause
          select_statement ::= * select_clause where_clause order_clause select_limit_clause
          select_statement ::= * select_clause where_clause group_clause select_limit_clause
          select_statement ::= * select_clause where_clause group_clause having_clause select_limit_clause
          select_statement ::= * select_clause order_clause
          select_statement ::= * select_clause group_clause order_clause
          select_statement ::= * select_clause group_clause having_clause order_clause
          select_statement ::= * select_clause order_clause select_limit_clause
          select_statement ::= * select_clause group_clause order_clause select_limit_clause
          select_statement ::= * select_clause where_clause group_clause having_clause order_clause select_limit_clause
          select_statement ::= * select_clause group_clause
          select_statement ::= * select_clause group_clause select_limit_clause
          select_statement ::= * select_clause group_clause having_clause
          select_statement ::= * select_clause group_clause having_clause select_limit_clause
          select_statement ::= * select_clause group_clause having_clause order_clause select_limit_clause
          select_statement ::= * select_clause select_limit_clause
          select_clause ::= * SELECT column_list FROM associated_name_list
          select_clause ::= * SELECT column_list FROM associated_name_list join_list
          insert_statement ::= * INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= * INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          update_statement ::= * update_clause
          update_statement ::= * update_clause where_clause
          update_statement ::= * update_clause limit_clause
          update_statement ::= * update_clause where_clause limit_clause
          update_clause ::= * UPDATE associated_name SET update_item_list
          delete_statement ::= * delete_clause
          delete_statement ::= * delete_clause where_clause
          delete_statement ::= * delete_clause limit_clause
          delete_statement ::= * delete_clause where_clause limit_clause
          delete_clause ::= * DELETE FROM associated_name

                        SELECT shift  165
                        INSERT shift  220
                        UPDATE shift  248
                        DELETE shift  263
                       program accept
                query_language shift  1
              select_statement shift  2
              insert_statement shift  3
              update_statement shift  4
              delete_statement shift  5
                 select_clause shift  6
                 update_clause shift  242
                 delete_clause shift  259

State 1:
      (0) program ::= query_language *

                             $ reduce 0

State 2:
      (1) query_language ::= select_statement *

                             $ reduce 1

State 3:
      (2) query_language ::= insert_statement *

                             $ reduce 2

State 4:
      (3) query_language ::= update_statement *

                             $ reduce 3

State 5:
      (4) query_language ::= delete_statement *

                             $ reduce 4

State 6:
      (5) select_statement ::= select_clause *
          select_statement ::= select_clause * where_clause
          select_statement ::= select_clause * where_clause order_clause
          select_statement ::= select_clause * where_clause group_clause
          select_statement ::= select_clause * where_clause group_clause having_clause
          select_statement ::= select_clause * where_clause group_clause order_clause
          select_statement ::= select_clause * where_clause group_clause order_clause select_limit_clause
          select_statement ::= select_clause * where_clause group_clause having_clause order_clause
          select_statement ::= select_clause * where_clause select_limit_clause
          select_statement ::= select_clause * where_clause order_clause select_limit_clause
          select_statement ::= select_clause * where_clause group_clause select_limit_clause
          select_statement ::= select_clause * where_clause group_clause having_clause select_limit_clause
          select_statement ::= select_clause * order_clause
          select_statement ::= select_clause * group_clause order_clause
          select_statement ::= select_clause * group_clause having_clause order_clause
          select_statement ::= select_clause * order_clause select_limit_clause
          select_statement ::= select_clause * group_clause order_clause select_limit_clause
          select_statement ::= select_clause * where_clause group_clause having_clause order_clause select_limit_clause
          select_statement ::= select_clause * group_clause
          select_statement ::= select_clause * group_clause select_limit_clause
          select_statement ::= select_clause * group_clause having_clause
          select_statement ::= select_clause * group_clause having_clause select_limit_clause
          select_statement ::= select_clause * group_clause having_clause order_clause select_limit_clause
          select_statement ::= select_clause * select_limit_clause
          where_clause ::= * WHERE expr
          order_clause ::= * ORDER BY order_list
          group_clause ::= * GROUP BY group_list
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 5
                         WHERE shift  163
                         ORDER shift  24
                         GROUP shift  145
                         LIMIT shift  10
                  where_clause shift  7
                  order_clause shift  152
                  group_clause shift  154
           select_limit_clause shift  162

State 7:
      (6) select_statement ::= select_clause where_clause *
          select_statement ::= select_clause where_clause * order_clause
          select_statement ::= select_clause where_clause * group_clause
          select_statement ::= select_clause where_clause * group_clause having_clause
          select_statement ::= select_clause where_clause * group_clause order_clause
          select_statement ::= select_clause where_clause * group_clause order_clause select_limit_clause
          select_statement ::= select_clause where_clause * group_clause having_clause order_clause
          select_statement ::= select_clause where_clause * select_limit_clause
          select_statement ::= select_clause where_clause * order_clause select_limit_clause
          select_statement ::= select_clause where_clause * group_clause select_limit_clause
          select_statement ::= select_clause where_clause * group_clause having_clause select_limit_clause
          select_statement ::= select_clause where_clause * group_clause having_clause order_clause select_limit_clause
          order_clause ::= * ORDER BY order_list
          group_clause ::= * GROUP BY group_list
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 6
                         ORDER shift  24
                         GROUP shift  145
                         LIMIT shift  10
                  order_clause shift  8
                  group_clause shift  19
           select_limit_clause shift  144

State 8:
      (7) select_statement ::= select_clause where_clause order_clause *
          select_statement ::= select_clause where_clause order_clause * select_limit_clause
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 7
                         LIMIT shift  10
           select_limit_clause shift  9

State 9:
     (14) select_statement ::= select_clause where_clause order_clause select_limit_clause *

                             $ reduce 14

State 10:
          select_limit_clause ::= LIMIT * integer_or_placeholder
          select_limit_clause ::= LIMIT * integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= LIMIT * integer_or_placeholder OFFSET integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  14
                  NPLACEHOLDER shift  15
                  SPLACEHOLDER shift  16
        integer_or_placeholder shift  11

State 11:
     (97) select_limit_clause ::= LIMIT integer_or_placeholder *
          select_limit_clause ::= LIMIT integer_or_placeholder * COMMA integer_or_placeholder
          select_limit_clause ::= LIMIT integer_or_placeholder * OFFSET integer_or_placeholder

                             $ reduce 97
                         COMMA shift  12
                        OFFSET shift  17

State 12:
          select_limit_clause ::= LIMIT integer_or_placeholder COMMA * integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  14
                  NPLACEHOLDER shift  15
                  SPLACEHOLDER shift  16
        integer_or_placeholder shift  13

State 13:
     (98) select_limit_clause ::= LIMIT integer_or_placeholder COMMA integer_or_placeholder *

                             $ reduce 98

State 14:
    (101) integer_or_placeholder ::= INTEGER *

                     {default} reduce 101

State 15:
    (102) integer_or_placeholder ::= NPLACEHOLDER *

                     {default} reduce 102

State 16:
    (103) integer_or_placeholder ::= SPLACEHOLDER *

                     {default} reduce 103

State 17:
          select_limit_clause ::= LIMIT integer_or_placeholder OFFSET * integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  14
                  NPLACEHOLDER shift  15
                  SPLACEHOLDER shift  16
        integer_or_placeholder shift  18

State 18:
     (99) select_limit_clause ::= LIMIT integer_or_placeholder OFFSET integer_or_placeholder *

                             $ reduce 99

State 19:
      (8) select_statement ::= select_clause where_clause group_clause *
          select_statement ::= select_clause where_clause group_clause * having_clause
          select_statement ::= select_clause where_clause group_clause * order_clause
          select_statement ::= select_clause where_clause group_clause * order_clause select_limit_clause
          select_statement ::= select_clause where_clause group_clause * having_clause order_clause
          select_statement ::= select_clause where_clause group_clause * select_limit_clause
          select_statement ::= select_clause where_clause group_clause * having_clause select_limit_clause
          select_statement ::= select_clause where_clause group_clause * having_clause order_clause select_limit_clause
          order_clause ::= * ORDER BY order_list
          having_clause ::= * HAVING expr
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 8
                         ORDER shift  24
                        HAVING shift  142
                         LIMIT shift  10
                  order_clause shift  139
                 having_clause shift  20
           select_limit_clause shift  141

State 20:
      (9) select_statement ::= select_clause where_clause group_clause having_clause *
          select_statement ::= select_clause where_clause group_clause having_clause * order_clause
          select_statement ::= select_clause where_clause group_clause having_clause * select_limit_clause
          select_statement ::= select_clause where_clause group_clause having_clause * order_clause select_limit_clause
          order_clause ::= * ORDER BY order_list
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 9
                         ORDER shift  24
                         LIMIT shift  10
                  order_clause shift  21
           select_limit_clause shift  23

State 21:
     (12) select_statement ::= select_clause where_clause group_clause having_clause order_clause *
          select_statement ::= select_clause where_clause group_clause having_clause order_clause * select_limit_clause
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 12
                         LIMIT shift  10
           select_limit_clause shift  22

State 22:
     (22) select_statement ::= select_clause where_clause group_clause having_clause order_clause select_limit_clause *

                             $ reduce 22

State 23:
     (16) select_statement ::= select_clause where_clause group_clause having_clause select_limit_clause *

                             $ reduce 16

State 24:
          order_clause ::= ORDER * BY order_list

                            BY shift  25

State 25:
          order_clause ::= ORDER BY * order_list
          order_list ::= * order_list COMMA order_item
          order_list ::= * order_item
          order_item ::= * expr
          order_item ::= * expr ASC
          order_item ::= * expr DESC
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  29
                qualified_name shift  112
                    order_list shift  26
                    order_item shift  138
                 function_call shift  95

State 26:
     (86) order_clause ::= ORDER BY order_list *
          order_list ::= order_list * COMMA order_item

                         COMMA shift  27
                     {default} reduce 86

State 27:
          order_list ::= order_list COMMA * order_item
          order_item ::= * expr
          order_item ::= * expr ASC
          order_item ::= * expr DESC
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  29
                qualified_name shift  112
                    order_item shift  28
                 function_call shift  95

State 28:
     (87) order_list ::= order_list COMMA order_item *

                     {default} reduce 87

State 29:
     (89) order_item ::= expr *
          order_item ::= expr * ASC
          order_item ::= expr * DESC
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                           ASC shift  30
                          DESC shift  31
                     {default} reduce 89

State 30:
     (90) order_item ::= expr ASC *

                     {default} reduce 90

State 31:
     (91) order_item ::= expr DESC *

                     {default} reduce 91

State 32:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  137
                qualified_name shift  112
                 function_call shift  95

State 33:
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  34
                qualified_name shift  112
                 function_call shift  95

State 34:
    (104) expr ::= MINUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 104

State 35:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  36
                qualified_name shift  112
                 function_call shift  95

State 36:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
    (106) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 106

State 37:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  38
                qualified_name shift  112
                 function_call shift  95

State 38:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
    (107) expr ::= expr TIMES expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 107

State 39:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  40
                qualified_name shift  112
                 function_call shift  95

State 40:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
    (108) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 108

State 41:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  42
                qualified_name shift  112
                 function_call shift  95

State 42:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
    (109) expr ::= expr MOD expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 109

State 43:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  44
                qualified_name shift  112
                 function_call shift  95

State 44:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
    (110) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 110

State 45:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  46
                qualified_name shift  112
                 function_call shift  95

State 46:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
    (111) expr ::= expr OR expr *
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 111

State 47:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= expr BITWISE_AND * expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  48
                qualified_name shift  112
                 function_call shift  95

State 48:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
    (112) expr ::= expr BITWISE_AND expr *
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 112

State 49:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= expr BITWISE_OR * expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  50
                qualified_name shift  112
                 function_call shift  95

State 50:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
    (113) expr ::= expr BITWISE_OR expr *
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 113

State 51:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= expr BITWISE_XOR * expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  52
                qualified_name shift  112
                 function_call shift  95

State 52:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
    (114) expr ::= expr BITWISE_XOR expr *
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 114

State 53:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= expr EQUALS * expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  54
                qualified_name shift  112
                 function_call shift  95

State 54:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
    (115) expr ::= expr EQUALS expr *
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 115

State 55:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= expr NOTEQUALS * expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  56
                qualified_name shift  112
                 function_call shift  95

State 56:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
    (116) expr ::= expr NOTEQUALS expr *
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 116

State 57:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= expr LESS * expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  58
                qualified_name shift  112
                 function_call shift  95

State 58:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
    (117) expr ::= expr LESS expr *
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 117

State 59:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= expr GREATER * expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  60
                qualified_name shift  112
                 function_call shift  95

State 60:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
    (118) expr ::= expr GREATER expr *
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 118

State 61:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= expr GREATEREQUAL * expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  62
                qualified_name shift  112
                 function_call shift  95

State 62:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
    (119) expr ::= expr GREATEREQUAL expr *
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 119

State 63:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= expr LESSEQUAL * expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  64
                qualified_name shift  112
                 function_call shift  95

State 64:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
    (120) expr ::= expr LESSEQUAL expr *
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 120

State 65:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= expr LIKE * expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  66
                qualified_name shift  112
                 function_call shift  95

State 66:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
    (121) expr ::= expr LIKE expr *
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 121

State 67:
          expr ::= expr NOT * LIKE expr
          expr ::= expr NOT * ILIKE expr
          expr ::= expr NOT * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE

                          LIKE shift  68
                         ILIKE shift  131
                            IN shift  133

State 68:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= expr NOT LIKE * expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  69
                qualified_name shift  112
                 function_call shift  95

State 69:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
    (122) expr ::= expr NOT LIKE expr *
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           NOT shift  67
                     {default} reduce 122

State 70:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= expr ILIKE * expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  71
                qualified_name shift  112
                 function_call shift  95

State 71:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
    (123) expr ::= expr ILIKE expr *
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 123

State 72:
          expr ::= expr IN * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  73

State 73:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr IN PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  102
                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  74
                qualified_name shift  112
                 argument_list shift  129
                 function_call shift  95
                 argument_item shift  122

State 74:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
    (136) argument_item ::= expr *
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 136

State 75:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= expr AGAINST * expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  76
                qualified_name shift  112
                 function_call shift  95

State 76:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
    (127) expr ::= expr AGAINST expr *
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 127

State 77:
          expr ::= expr IS * NULL
          expr ::= expr IS * NOT NULL

                           NOT shift  79
                          NULL shift  78

State 78:
    (137) expr ::= expr IS NULL *

                     {default} reduce 137

State 79:
          expr ::= expr IS NOT * NULL

                          NULL shift  80

State 80:
    (138) expr ::= expr IS NOT NULL *

                     {default} reduce 138

State 81:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= expr BETWEEN * expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  82
                qualified_name shift  112
                 function_call shift  95

State 82:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
    (140) expr ::= expr BETWEEN expr *

                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 140

State 83:
          expr ::= CAST * PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  84

State 84:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= CAST PARENTHESES_OPEN * expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  85
                qualified_name shift  112
                 function_call shift  95

State 85:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= CAST PARENTHESES_OPEN expr * AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                            AS shift  86

State 86:
          expr ::= CAST PARENTHESES_OPEN expr AS * IDENTIFIER PARENTHESES_CLOSE

                    IDENTIFIER shift  87

State 87:
          expr ::= CAST PARENTHESES_OPEN expr AS IDENTIFIER * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  88

State 88:
    (128) expr ::= CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE *

                     {default} reduce 128

State 89:
          expr ::= CONVERT * PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  90

State 90:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= CONVERT PARENTHESES_OPEN * expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  91
                qualified_name shift  112
                 function_call shift  95

State 91:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= CONVERT PARENTHESES_OPEN expr * USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                         USING shift  92

State 92:
          expr ::= CONVERT PARENTHESES_OPEN expr USING * IDENTIFIER PARENTHESES_CLOSE

                    IDENTIFIER shift  93

State 93:
          expr ::= CONVERT PARENTHESES_OPEN expr USING IDENTIFIER * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  94

State 94:
    (129) expr ::= CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE *

                     {default} reduce 129

State 95:
    (130) expr ::= function_call *

                     {default} reduce 130

State 96:
          function_call ::= IDENTIFIER * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER
          qualified_name ::= IDENTIFIER * DOT IDENTIFIER
    (156) qualified_name ::= IDENTIFIER *

                           DOT shift  127
              PARENTHESES_OPEN shift  97
                         COLON shift  123
                     {default} reduce 156

State 97:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= IDENTIFIER PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          function_call ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  102
                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
             PARENTHESES_CLOSE shift  121
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  74
                qualified_name shift  112
                 argument_list shift  98
                 function_call shift  95
                 argument_item shift  122

State 98:
          function_call ::= IDENTIFIER PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  100
             PARENTHESES_CLOSE shift  99

State 99:
    (131) function_call ::= IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

                     {default} reduce 131

State 100:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          argument_list ::= argument_list COMMA * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  102
                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  74
                qualified_name shift  112
                 function_call shift  95
                 argument_item shift  101

State 101:
    (133) argument_list ::= argument_list COMMA argument_item *

                     {default} reduce 133

State 102:
    (135) argument_item ::= TIMES *

                     {default} reduce 135

State 103:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= DISTINCT * expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  104
                qualified_name shift  112
                 function_call shift  95

State 104:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
    (139) expr ::= DISTINCT expr *
          expr ::= expr * BETWEEN expr

                            IN shift  72
                           NOT shift  67
                     {default} reduce 139

State 105:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  106
                qualified_name shift  112
                 function_call shift  95

State 106:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
    (141) expr ::= NOT expr *

                           NOT shift  67
                     {default} reduce 141

State 107:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= BITWISE_NOT * expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  108
                qualified_name shift  112
                 function_call shift  95

State 108:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
    (142) expr ::= BITWISE_NOT expr *

                           NOT shift  67
                     {default} reduce 142

State 109:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= PARENTHESES_OPEN * expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  110
                qualified_name shift  112
                 function_call shift  95

State 110:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
          expr ::= PARENTHESES_OPEN expr * PARENTHESES_CLOSE

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
             PARENTHESES_CLOSE shift  111

State 111:
    (143) expr ::= PARENTHESES_OPEN expr PARENTHESES_CLOSE *

                     {default} reduce 143

State 112:
    (144) expr ::= qualified_name *

                     {default} reduce 144

State 113:
    (145) expr ::= INTEGER *

                     {default} reduce 145

State 114:
    (146) expr ::= STRING *

                     {default} reduce 146

State 115:
    (147) expr ::= DOUBLE *

                     {default} reduce 147

State 116:
    (148) expr ::= NULL *

                     {default} reduce 148

State 117:
    (149) expr ::= TRUE *

                     {default} reduce 149

State 118:
    (150) expr ::= FALSE *

                     {default} reduce 150

State 119:
    (151) expr ::= NPLACEHOLDER *

                     {default} reduce 151

State 120:
    (152) expr ::= SPLACEHOLDER *

                     {default} reduce 152

State 121:
    (132) function_call ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 132

State 122:
    (134) argument_list ::= argument_item *

                     {default} reduce 134

State 123:
          qualified_name ::= IDENTIFIER COLON * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= IDENTIFIER COLON * IDENTIFIER

                    IDENTIFIER shift  124

State 124:
          qualified_name ::= IDENTIFIER COLON IDENTIFIER * DOT IDENTIFIER
    (154) qualified_name ::= IDENTIFIER COLON IDENTIFIER *

                           DOT shift  125
                     {default} reduce 154

State 125:
          qualified_name ::= IDENTIFIER COLON IDENTIFIER DOT * IDENTIFIER

                    IDENTIFIER shift  126

State 126:
    (153) qualified_name ::= IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER *

                     {default} reduce 153

State 127:
          qualified_name ::= IDENTIFIER DOT * IDENTIFIER

                    IDENTIFIER shift  128

State 128:
    (155) qualified_name ::= IDENTIFIER DOT IDENTIFIER *

                     {default} reduce 155

State 129:
          expr ::= expr IN PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  100
             PARENTHESES_CLOSE shift  130

State 130:
    (125) expr ::= expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

                     {default} reduce 125

State 131:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= expr NOT ILIKE * expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  132
                qualified_name shift  112
                 function_call shift  95

State 132:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
    (124) expr ::= expr NOT ILIKE expr *
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           NOT shift  67
                     {default} reduce 124

State 133:
          expr ::= expr NOT IN * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  134

State 134:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr NOT IN PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  102
                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  74
                qualified_name shift  112
                 argument_list shift  135
                 function_call shift  95
                 argument_item shift  122

State 135:
          expr ::= expr NOT IN PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  100
             PARENTHESES_CLOSE shift  136

State 136:
    (126) expr ::= expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

                     {default} reduce 126

State 137:
          expr ::= expr * MINUS expr
    (105) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 105

State 138:
     (88) order_list ::= order_item *

                     {default} reduce 88

State 139:
     (10) select_statement ::= select_clause where_clause group_clause order_clause *
          select_statement ::= select_clause where_clause group_clause order_clause * select_limit_clause
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 10
                         LIMIT shift  10
           select_limit_clause shift  140

State 140:
     (11) select_statement ::= select_clause where_clause group_clause order_clause select_limit_clause *

                             $ reduce 11

State 141:
     (15) select_statement ::= select_clause where_clause group_clause select_limit_clause *

                             $ reduce 15

State 142:
          having_clause ::= HAVING * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  143
                qualified_name shift  112
                 function_call shift  95

State 143:
     (96) having_clause ::= HAVING expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 96

State 144:
     (13) select_statement ::= select_clause where_clause select_limit_clause *

                             $ reduce 13

State 145:
          group_clause ::= GROUP * BY group_list

                            BY shift  146

State 146:
          group_clause ::= GROUP BY * group_list
          group_list ::= * group_list COMMA group_item
          group_list ::= * group_item
          group_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  150
                qualified_name shift  112
                    group_list shift  147
                    group_item shift  151
                 function_call shift  95

State 147:
     (92) group_clause ::= GROUP BY group_list *
          group_list ::= group_list * COMMA group_item

                         COMMA shift  148
                     {default} reduce 92

State 148:
          group_list ::= group_list COMMA * group_item
          group_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  150
                qualified_name shift  112
                    group_item shift  149
                 function_call shift  95

State 149:
     (93) group_list ::= group_list COMMA group_item *

                     {default} reduce 93

State 150:
     (95) group_item ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 95

State 151:
     (94) group_list ::= group_item *

                     {default} reduce 94

State 152:
     (17) select_statement ::= select_clause order_clause *
          select_statement ::= select_clause order_clause * select_limit_clause
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 17
                         LIMIT shift  10
           select_limit_clause shift  153

State 153:
     (20) select_statement ::= select_clause order_clause select_limit_clause *

                             $ reduce 20

State 154:
          select_statement ::= select_clause group_clause * order_clause
          select_statement ::= select_clause group_clause * having_clause order_clause
          select_statement ::= select_clause group_clause * order_clause select_limit_clause
     (23) select_statement ::= select_clause group_clause *
          select_statement ::= select_clause group_clause * select_limit_clause
          select_statement ::= select_clause group_clause * having_clause
          select_statement ::= select_clause group_clause * having_clause select_limit_clause
          select_statement ::= select_clause group_clause * having_clause order_clause select_limit_clause
          order_clause ::= * ORDER BY order_list
          having_clause ::= * HAVING expr
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 23
                         ORDER shift  24
                        HAVING shift  142
                         LIMIT shift  10
                  order_clause shift  155
                 having_clause shift  157
           select_limit_clause shift  161

State 155:
     (18) select_statement ::= select_clause group_clause order_clause *
          select_statement ::= select_clause group_clause order_clause * select_limit_clause
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 18
                         LIMIT shift  10
           select_limit_clause shift  156

State 156:
     (21) select_statement ::= select_clause group_clause order_clause select_limit_clause *

                             $ reduce 21

State 157:
          select_statement ::= select_clause group_clause having_clause * order_clause
     (25) select_statement ::= select_clause group_clause having_clause *
          select_statement ::= select_clause group_clause having_clause * select_limit_clause
          select_statement ::= select_clause group_clause having_clause * order_clause select_limit_clause
          order_clause ::= * ORDER BY order_list
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 25
                         ORDER shift  24
                         LIMIT shift  10
                  order_clause shift  158
           select_limit_clause shift  160

State 158:
     (19) select_statement ::= select_clause group_clause having_clause order_clause *
          select_statement ::= select_clause group_clause having_clause order_clause * select_limit_clause
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder

                             $ reduce 19
                         LIMIT shift  10
           select_limit_clause shift  159

State 159:
     (27) select_statement ::= select_clause group_clause having_clause order_clause select_limit_clause *

                             $ reduce 27

State 160:
     (26) select_statement ::= select_clause group_clause having_clause select_limit_clause *

                             $ reduce 26

State 161:
     (24) select_statement ::= select_clause group_clause select_limit_clause *

                             $ reduce 24

State 162:
     (28) select_statement ::= select_clause select_limit_clause *

                             $ reduce 28

State 163:
          where_clause ::= WHERE * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  164
                qualified_name shift  112
                 function_call shift  95

State 164:
     (85) where_clause ::= WHERE expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 85

State 165:
          select_clause ::= SELECT * column_list FROM associated_name_list
          select_clause ::= SELECT * column_list FROM associated_name_list join_list
          column_list ::= * column_list COMMA column_item
          column_list ::= * column_item
          column_item ::= * TIMES
          column_item ::= * IDENTIFIER DOT TIMES
          column_item ::= * expr AS IDENTIFIER
          column_item ::= * expr IDENTIFIER
          column_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  211
                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  212
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                   column_list shift  166
                   column_item shift  219
                          expr shift  215
                qualified_name shift  112
                 function_call shift  95

State 166:
          select_clause ::= SELECT column_list * FROM associated_name_list
          select_clause ::= SELECT column_list * FROM associated_name_list join_list
          column_list ::= column_list * COMMA column_item

                          FROM shift  167
                         COMMA shift  209

State 167:
          select_clause ::= SELECT column_list FROM * associated_name_list
          select_clause ::= SELECT column_list FROM * associated_name_list join_list
          associated_name_list ::= * associated_name_list COMMA associated_name
          associated_name_list ::= * associated_name
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  183
          associated_name_list shift  168
               associated_name shift  208
     aliased_or_qualified_name shift  203
                qualified_name shift  182

State 168:
     (29) select_clause ::= SELECT column_list FROM associated_name_list *
          select_clause ::= SELECT column_list FROM associated_name_list * join_list
          associated_name_list ::= associated_name_list * COMMA associated_name
          join_list ::= * join_list join_item
          join_list ::= * join_item
          join_item ::= * join_clause
          join_clause ::= * join_type aliased_or_qualified_name
          join_clause ::= * join_type aliased_or_qualified_name join_associated_name
          join_clause ::= * join_type aliased_or_qualified_name join_conditions
          join_clause ::= * join_type aliased_or_qualified_name join_associated_name join_conditions
          join_type ::= * JOIN
          join_type ::= * INNER JOIN
          join_type ::= * CROSS JOIN
          join_type ::= * LEFT JOIN
          join_type ::= * LEFT OUTER JOIN
          join_type ::= * RIGHT JOIN
          join_type ::= * RIGHT OUTER JOIN
          join_type ::= * FULL JOIN
          join_type ::= * FULL OUTER JOIN

                         COMMA shift  201
                          JOIN shift  184
                         INNER shift  185
                         CROSS shift  187
                          LEFT shift  189
                         RIGHT shift  193
                          FULL shift  197
                     join_list shift  169
                     join_item shift  207
                   join_clause shift  171
                     join_type shift  172
                     {default} reduce 29

State 169:
     (30) select_clause ::= SELECT column_list FROM associated_name_list join_list *
          join_list ::= join_list * join_item
          join_item ::= * join_clause
          join_clause ::= * join_type aliased_or_qualified_name
          join_clause ::= * join_type aliased_or_qualified_name join_associated_name
          join_clause ::= * join_type aliased_or_qualified_name join_conditions
          join_clause ::= * join_type aliased_or_qualified_name join_associated_name join_conditions
          join_type ::= * JOIN
          join_type ::= * INNER JOIN
          join_type ::= * CROSS JOIN
          join_type ::= * LEFT JOIN
          join_type ::= * LEFT OUTER JOIN
          join_type ::= * RIGHT JOIN
          join_type ::= * RIGHT OUTER JOIN
          join_type ::= * FULL JOIN
          join_type ::= * FULL OUTER JOIN

                          JOIN shift  184
                         INNER shift  185
                         CROSS shift  187
                          LEFT shift  189
                         RIGHT shift  193
                          FULL shift  197
                     join_item shift  170
                   join_clause shift  171
                     join_type shift  172
                     {default} reduce 30

State 170:
     (40) join_list ::= join_list join_item *

                     {default} reduce 40

State 171:
     (42) join_item ::= join_clause *

                     {default} reduce 42

State 172:
          join_clause ::= join_type * aliased_or_qualified_name
          join_clause ::= join_type * aliased_or_qualified_name join_associated_name
          join_clause ::= join_type * aliased_or_qualified_name join_conditions
          join_clause ::= join_type * aliased_or_qualified_name join_associated_name join_conditions
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  183
     aliased_or_qualified_name shift  173
                qualified_name shift  182

State 173:
     (43) join_clause ::= join_type aliased_or_qualified_name *
          join_clause ::= join_type aliased_or_qualified_name * join_associated_name
          join_clause ::= join_type aliased_or_qualified_name * join_conditions
          join_clause ::= join_type aliased_or_qualified_name * join_associated_name join_conditions
          join_associated_name ::= * AS IDENTIFIER
          join_associated_name ::= * IDENTIFIER
          join_conditions ::= * ON expr

                    IDENTIFIER shift  181
                            AS shift  179
                            ON shift  176
          join_associated_name shift  174
               join_conditions shift  178
                     {default} reduce 43

State 174:
     (44) join_clause ::= join_type aliased_or_qualified_name join_associated_name *
          join_clause ::= join_type aliased_or_qualified_name join_associated_name * join_conditions
          join_conditions ::= * ON expr

                            ON shift  176
               join_conditions shift  175
                     {default} reduce 44

State 175:
     (46) join_clause ::= join_type aliased_or_qualified_name join_associated_name join_conditions *

                     {default} reduce 46

State 176:
          join_conditions ::= ON * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  177
                qualified_name shift  112
                 function_call shift  95

State 177:
     (58) join_conditions ::= ON expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 58

State 178:
     (45) join_clause ::= join_type aliased_or_qualified_name join_conditions *

                     {default} reduce 45

State 179:
          join_associated_name ::= AS * IDENTIFIER

                    IDENTIFIER shift  180

State 180:
     (47) join_associated_name ::= AS IDENTIFIER *

                     {default} reduce 47

State 181:
     (48) join_associated_name ::= IDENTIFIER *

                     {default} reduce 48

State 182:
     (84) aliased_or_qualified_name ::= qualified_name *

                     {default} reduce 84

State 183:
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER
          qualified_name ::= IDENTIFIER * DOT IDENTIFIER
    (156) qualified_name ::= IDENTIFIER *

                           DOT shift  127
                         COLON shift  123
                     {default} reduce 156

State 184:
     (49) join_type ::= JOIN *

                    IDENTIFIER reduce 49

State 185:
          join_type ::= INNER * JOIN

                          JOIN shift  186

State 186:
     (50) join_type ::= INNER JOIN *

                    IDENTIFIER reduce 50

State 187:
          join_type ::= CROSS * JOIN

                          JOIN shift  188

State 188:
     (51) join_type ::= CROSS JOIN *

                    IDENTIFIER reduce 51

State 189:
          join_type ::= LEFT * JOIN
          join_type ::= LEFT * OUTER JOIN

                          JOIN shift  190
                         OUTER shift  191

State 190:
     (52) join_type ::= LEFT JOIN *

                    IDENTIFIER reduce 52

State 191:
          join_type ::= LEFT OUTER * JOIN

                          JOIN shift  192

State 192:
     (53) join_type ::= LEFT OUTER JOIN *

                    IDENTIFIER reduce 53

State 193:
          join_type ::= RIGHT * JOIN
          join_type ::= RIGHT * OUTER JOIN

                          JOIN shift  194
                         OUTER shift  195

State 194:
     (54) join_type ::= RIGHT JOIN *

                    IDENTIFIER reduce 54

State 195:
          join_type ::= RIGHT OUTER * JOIN

                          JOIN shift  196

State 196:
     (55) join_type ::= RIGHT OUTER JOIN *

                    IDENTIFIER reduce 55

State 197:
          join_type ::= FULL * JOIN
          join_type ::= FULL * OUTER JOIN

                          JOIN shift  198
                         OUTER shift  199

State 198:
     (56) join_type ::= FULL JOIN *

                    IDENTIFIER reduce 56

State 199:
          join_type ::= FULL OUTER * JOIN

                          JOIN shift  200

State 200:
     (57) join_type ::= FULL OUTER JOIN *

                    IDENTIFIER reduce 57

State 201:
          associated_name_list ::= associated_name_list COMMA * associated_name
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  183
               associated_name shift  202
     aliased_or_qualified_name shift  203
                qualified_name shift  182

State 202:
     (38) associated_name_list ::= associated_name_list COMMA associated_name *

                     {default} reduce 38

State 203:
          associated_name ::= aliased_or_qualified_name * AS IDENTIFIER
          associated_name ::= aliased_or_qualified_name * IDENTIFIER
     (83) associated_name ::= aliased_or_qualified_name *

                    IDENTIFIER shift  206
                            AS shift  204
                     {default} reduce 83

State 204:
          associated_name ::= aliased_or_qualified_name AS * IDENTIFIER

                    IDENTIFIER shift  205

State 205:
     (81) associated_name ::= aliased_or_qualified_name AS IDENTIFIER *

                     {default} reduce 81

State 206:
     (82) associated_name ::= aliased_or_qualified_name IDENTIFIER *

                     {default} reduce 82

State 207:
     (41) join_list ::= join_item *

                     {default} reduce 41

State 208:
     (39) associated_name_list ::= associated_name *

                     {default} reduce 39

State 209:
          column_list ::= column_list COMMA * column_item
          column_item ::= * TIMES
          column_item ::= * IDENTIFIER DOT TIMES
          column_item ::= * expr AS IDENTIFIER
          column_item ::= * expr IDENTIFIER
          column_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  211
                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  212
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                   column_item shift  210
                          expr shift  215
                qualified_name shift  112
                 function_call shift  95

State 210:
     (31) column_list ::= column_list COMMA column_item *

                     {default} reduce 31

State 211:
     (33) column_item ::= TIMES *

                     {default} reduce 33

State 212:
          column_item ::= IDENTIFIER * DOT TIMES
          function_call ::= IDENTIFIER * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER
          qualified_name ::= IDENTIFIER * DOT IDENTIFIER
    (156) qualified_name ::= IDENTIFIER *

                           DOT shift  213
              PARENTHESES_OPEN shift  97
                         COLON shift  123
                     {default} reduce 156

State 213:
          column_item ::= IDENTIFIER DOT * TIMES
          qualified_name ::= IDENTIFIER DOT * IDENTIFIER

                         TIMES shift  214
                    IDENTIFIER shift  128

State 214:
     (34) column_item ::= IDENTIFIER DOT TIMES *

                     {default} reduce 34

State 215:
          column_item ::= expr * AS IDENTIFIER
          column_item ::= expr * IDENTIFIER
     (37) column_item ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                    IDENTIFIER shift  218
                            AS shift  216
                     {default} reduce 37

State 216:
          column_item ::= expr AS * IDENTIFIER

                    IDENTIFIER shift  217

State 217:
     (35) column_item ::= expr AS IDENTIFIER *

                     {default} reduce 35

State 218:
     (36) column_item ::= expr IDENTIFIER *

                     {default} reduce 36

State 219:
     (32) column_list ::= column_item *

                     {default} reduce 32

State 220:
          insert_statement ::= INSERT * INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= INSERT * INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE

                          INTO shift  221

State 221:
          insert_statement ::= INSERT INTO * aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= INSERT INTO * aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  183
     aliased_or_qualified_name shift  222
                qualified_name shift  182

State 222:
          insert_statement ::= INSERT INTO aliased_or_qualified_name * VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= INSERT INTO aliased_or_qualified_name * PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE

                        VALUES shift  223
              PARENTHESES_OPEN shift  231

State 223:
          insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES * PARENTHESES_OPEN values_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  224

State 224:
          insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN * values_list PARENTHESES_CLOSE
          values_list ::= * values_list COMMA value_item
          values_list ::= * value_item
          value_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  229
                   values_list shift  225
                    value_item shift  230
                qualified_name shift  112
                 function_call shift  95

State 225:
          insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list * PARENTHESES_CLOSE
          values_list ::= values_list * COMMA value_item

                         COMMA shift  227
             PARENTHESES_CLOSE shift  226

State 226:
     (59) insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE *

                             $ reduce 59

State 227:
          values_list ::= values_list COMMA * value_item
          value_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  229
                    value_item shift  228
                qualified_name shift  112
                 function_call shift  95

State 228:
     (61) values_list ::= values_list COMMA value_item *

                     {default} reduce 61

State 229:
     (63) value_item ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 63

State 230:
     (62) values_list ::= value_item *

                     {default} reduce 62

State 231:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN * field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          field_list ::= * field_list COMMA field_item
          field_list ::= * field_item
          field_item ::= * IDENTIFIER

                    IDENTIFIER shift  240
                    field_list shift  232
                    field_item shift  241

State 232:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list * PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          field_list ::= field_list * COMMA field_item

                         COMMA shift  238
             PARENTHESES_CLOSE shift  233

State 233:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE * VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE

                        VALUES shift  234

State 234:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES * PARENTHESES_OPEN values_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  235

State 235:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN * values_list PARENTHESES_CLOSE
          values_list ::= * values_list COMMA value_item
          values_list ::= * value_item
          value_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  229
                   values_list shift  236
                    value_item shift  230
                qualified_name shift  112
                 function_call shift  95

State 236:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list * PARENTHESES_CLOSE
          values_list ::= values_list * COMMA value_item

                         COMMA shift  227
             PARENTHESES_CLOSE shift  237

State 237:
     (60) insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE *

                             $ reduce 60

State 238:
          field_list ::= field_list COMMA * field_item
          field_item ::= * IDENTIFIER

                    IDENTIFIER shift  240
                    field_item shift  239

State 239:
     (64) field_list ::= field_list COMMA field_item *

                     {default} reduce 64

State 240:
     (66) field_item ::= IDENTIFIER *

                     {default} reduce 66

State 241:
     (65) field_list ::= field_item *

                     {default} reduce 65

State 242:
     (67) update_statement ::= update_clause *
          update_statement ::= update_clause * where_clause
          update_statement ::= update_clause * limit_clause
          update_statement ::= update_clause * where_clause limit_clause
          where_clause ::= * WHERE expr
          limit_clause ::= * LIMIT integer_or_placeholder

                             $ reduce 67
                         WHERE shift  163
                         LIMIT shift  245
                  where_clause shift  243
                  limit_clause shift  247

State 243:
     (68) update_statement ::= update_clause where_clause *
          update_statement ::= update_clause where_clause * limit_clause
          limit_clause ::= * LIMIT integer_or_placeholder

                             $ reduce 68
                         LIMIT shift  245
                  limit_clause shift  244

State 244:
     (70) update_statement ::= update_clause where_clause limit_clause *

                             $ reduce 70

State 245:
          limit_clause ::= LIMIT * integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  14
                  NPLACEHOLDER shift  15
                  SPLACEHOLDER shift  16
        integer_or_placeholder shift  246

State 246:
    (100) limit_clause ::= LIMIT integer_or_placeholder *

                             $ reduce 100

State 247:
     (69) update_statement ::= update_clause limit_clause *

                             $ reduce 69

State 248:
          update_clause ::= UPDATE * associated_name SET update_item_list
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  183
               associated_name shift  249
     aliased_or_qualified_name shift  203
                qualified_name shift  182

State 249:
          update_clause ::= UPDATE associated_name * SET update_item_list

                           SET shift  250

State 250:
          update_clause ::= UPDATE associated_name SET * update_item_list
          update_item_list ::= * update_item_list COMMA update_item
          update_item_list ::= * update_item
          update_item ::= * qualified_name EQUALS new_value
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  183
              update_item_list shift  251
                   update_item shift  258
                qualified_name shift  254

State 251:
     (71) update_clause ::= UPDATE associated_name SET update_item_list *
          update_item_list ::= update_item_list * COMMA update_item

                         COMMA shift  252
                     {default} reduce 71

State 252:
          update_item_list ::= update_item_list COMMA * update_item
          update_item ::= * qualified_name EQUALS new_value
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  183
                   update_item shift  253
                qualified_name shift  254

State 253:
     (72) update_item_list ::= update_item_list COMMA update_item *

                     {default} reduce 72

State 254:
          update_item ::= qualified_name * EQUALS new_value

                        EQUALS shift  255

State 255:
          update_item ::= qualified_name EQUALS * new_value
          new_value ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * DISTINCT expr
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  33
                      DISTINCT shift  103
                           NOT shift  105
                   BITWISE_NOT shift  107
                    IDENTIFIER shift  96
              PARENTHESES_OPEN shift  109
                       INTEGER shift  113
                  NPLACEHOLDER shift  119
                  SPLACEHOLDER shift  120
                          CAST shift  83
                       CONVERT shift  89
                          NULL shift  116
                        STRING shift  114
                        DOUBLE shift  115
                          TRUE shift  117
                         FALSE shift  118
                          expr shift  257
                qualified_name shift  112
                     new_value shift  256
                 function_call shift  95

State 256:
     (74) update_item ::= qualified_name EQUALS new_value *

                     {default} reduce 74

State 257:
     (75) new_value ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  75
                       BETWEEN shift  81
                        EQUALS shift  53
                     NOTEQUALS shift  55
                          LESS shift  57
                       GREATER shift  59
                  GREATEREQUAL shift  61
                     LESSEQUAL shift  63
                           AND shift  43
                            OR shift  45
                          LIKE shift  65
                         ILIKE shift  70
                   BITWISE_AND shift  47
                    BITWISE_OR shift  49
                   BITWISE_XOR shift  51
                        DIVIDE shift  39
                         TIMES shift  37
                           MOD shift  41
                          PLUS shift  35
                         MINUS shift  32
                            IS shift  77
                            IN shift  72
                           NOT shift  67
                     {default} reduce 75

State 258:
     (73) update_item_list ::= update_item *

                     {default} reduce 73

State 259:
     (76) delete_statement ::= delete_clause *
          delete_statement ::= delete_clause * where_clause
          delete_statement ::= delete_clause * limit_clause
          delete_statement ::= delete_clause * where_clause limit_clause
          where_clause ::= * WHERE expr
          limit_clause ::= * LIMIT integer_or_placeholder

                             $ reduce 76
                         WHERE shift  163
                         LIMIT shift  245
                  where_clause shift  260
                  limit_clause shift  262

State 260:
     (77) delete_statement ::= delete_clause where_clause *
          delete_statement ::= delete_clause where_clause * limit_clause
          limit_clause ::= * LIMIT integer_or_placeholder

                             $ reduce 77
                         LIMIT shift  245
                  limit_clause shift  261

State 261:
     (79) delete_statement ::= delete_clause where_clause limit_clause *

                             $ reduce 79

State 262:
     (78) delete_statement ::= delete_clause limit_clause *

                             $ reduce 78

State 263:
          delete_clause ::= DELETE * FROM associated_name

                          FROM shift  264

State 264:
          delete_clause ::= DELETE FROM * associated_name
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  183
               associated_name shift  265
     aliased_or_qualified_name shift  203
                qualified_name shift  182

State 265:
     (80) delete_clause ::= DELETE FROM associated_name *

                     {default} reduce 80

