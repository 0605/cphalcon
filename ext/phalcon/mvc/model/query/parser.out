 State 0:
          program ::= * query_language
          query_language ::= * select_statement
          query_language ::= * insert_statement
          query_language ::= * update_statement
          query_language ::= * delete_statement
          select_statement ::= * select_clause where_clause group_clause having_clause order_clause select_limit_clause
          select_clause ::= * SELECT distinct_all column_list FROM associated_name_list join_list_or_null
          insert_statement ::= * INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= * INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          update_statement ::= * update_clause where_clause limit_clause
          update_clause ::= * UPDATE associated_name SET update_item_list
          delete_statement ::= * delete_clause where_clause limit_clause
          delete_clause ::= * DELETE FROM associated_name

                        SELECT shift  71
                        INSERT shift  223
                        UPDATE shift  250
                        DELETE shift  264
                       program accept
                query_language shift  1
              select_statement shift  2
              insert_statement shift  3
              update_statement shift  4
              delete_statement shift  5
                 select_clause shift  6
                 update_clause shift  245
                 delete_clause shift  261

State 1:
      (0) program ::= query_language *

                             $ reduce 0

State 2:
      (1) query_language ::= select_statement *

                             $ reduce 1

State 3:
      (2) query_language ::= insert_statement *

                             $ reduce 2

State 4:
      (3) query_language ::= update_statement *

                             $ reduce 3

State 5:
      (4) query_language ::= delete_statement *

                             $ reduce 4

State 6:
          select_statement ::= select_clause * where_clause group_clause having_clause order_clause select_limit_clause
          where_clause ::= * WHERE expr
     (60) where_clause ::= *

                         WHERE shift  221
                  where_clause shift  7
                     {default} reduce 60

State 7:
          select_statement ::= select_clause where_clause * group_clause having_clause order_clause select_limit_clause
          group_clause ::= * GROUP BY group_list
     (69) group_clause ::= *

                         GROUP shift  214
                  group_clause shift  8
                     {default} reduce 69

State 8:
          select_statement ::= select_clause where_clause group_clause * having_clause order_clause select_limit_clause
          having_clause ::= * HAVING expr
     (74) having_clause ::= *

                        HAVING shift  212
                 having_clause shift  9
                     {default} reduce 74

State 9:
          select_statement ::= select_clause where_clause group_clause having_clause * order_clause select_limit_clause
          order_clause ::= * ORDER BY order_list
     (62) order_clause ::= *

                         ORDER shift  21
                  order_clause shift  10
                     {default} reduce 62

State 10:
          select_statement ::= select_clause where_clause group_clause having_clause order_clause * select_limit_clause
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder
     (78) select_limit_clause ::= *

                         LIMIT shift  12
           select_limit_clause shift  11
                     {default} reduce 78

State 11:
      (5) select_statement ::= select_clause where_clause group_clause having_clause order_clause select_limit_clause *

                     {default} reduce 5

State 12:
          select_limit_clause ::= LIMIT * integer_or_placeholder
          select_limit_clause ::= LIMIT * integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= LIMIT * integer_or_placeholder OFFSET integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  16
                  NPLACEHOLDER shift  17
                  SPLACEHOLDER shift  18
        integer_or_placeholder shift  13

State 13:
     (75) select_limit_clause ::= LIMIT integer_or_placeholder *
          select_limit_clause ::= LIMIT integer_or_placeholder * COMMA integer_or_placeholder
          select_limit_clause ::= LIMIT integer_or_placeholder * OFFSET integer_or_placeholder

                         COMMA shift  14
                        OFFSET shift  19
                     {default} reduce 75

State 14:
          select_limit_clause ::= LIMIT integer_or_placeholder COMMA * integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  16
                  NPLACEHOLDER shift  17
                  SPLACEHOLDER shift  18
        integer_or_placeholder shift  15

State 15:
     (76) select_limit_clause ::= LIMIT integer_or_placeholder COMMA integer_or_placeholder *

                     {default} reduce 76

State 16:
     (81) integer_or_placeholder ::= INTEGER *

                     {default} reduce 81

State 17:
     (82) integer_or_placeholder ::= NPLACEHOLDER *

                     {default} reduce 82

State 18:
     (83) integer_or_placeholder ::= SPLACEHOLDER *

                     {default} reduce 83

State 19:
          select_limit_clause ::= LIMIT integer_or_placeholder OFFSET * integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  16
                  NPLACEHOLDER shift  17
                  SPLACEHOLDER shift  18
        integer_or_placeholder shift  20

State 20:
     (77) select_limit_clause ::= LIMIT integer_or_placeholder OFFSET integer_or_placeholder *

                     {default} reduce 77

State 21:
          order_clause ::= ORDER * BY order_list

                            BY shift  22

State 22:
          order_clause ::= ORDER BY * order_list
          order_list ::= * order_list COMMA order_item
          order_list ::= * order_item
          order_item ::= * expr
          order_item ::= * expr ASC
          order_item ::= * expr DESC
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  26
                qualified_name shift  149
                    order_list shift  23
                    order_item shift  211
                 function_call shift  134

State 23:
     (61) order_clause ::= ORDER BY order_list *
          order_list ::= order_list * COMMA order_item

                         COMMA shift  24
                     {default} reduce 61

State 24:
          order_list ::= order_list COMMA * order_item
          order_item ::= * expr
          order_item ::= * expr ASC
          order_item ::= * expr DESC
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  26
                qualified_name shift  149
                    order_item shift  25
                 function_call shift  134

State 25:
     (63) order_list ::= order_list COMMA order_item *

                     {default} reduce 63

State 26:
     (65) order_item ::= expr *
          order_item ::= expr * ASC
          order_item ::= expr * DESC
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                           ASC shift  27
                          DESC shift  28
                     {default} reduce 65

State 27:
     (66) order_item ::= expr ASC *

                     {default} reduce 66

State 28:
     (67) order_item ::= expr DESC *

                     {default} reduce 67

State 29:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  210
                qualified_name shift  149
                 function_call shift  134

State 30:
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  31
                qualified_name shift  149
                 function_call shift  134

State 31:
     (84) expr ::= MINUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 84

State 32:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  33
                qualified_name shift  149
                 function_call shift  134

State 33:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
     (86) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 86

State 34:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  35
                qualified_name shift  149
                 function_call shift  134

State 35:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
     (87) expr ::= expr TIMES expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 87

State 36:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  37
                qualified_name shift  149
                 function_call shift  134

State 37:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
     (88) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 88

State 38:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  39
                qualified_name shift  149
                 function_call shift  134

State 39:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (89) expr ::= expr MOD expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 89

State 40:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  41
                qualified_name shift  149
                 function_call shift  134

State 41:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
     (90) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 90

State 42:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  43
                qualified_name shift  149
                 function_call shift  134

State 43:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (91) expr ::= expr OR expr *
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 91

State 44:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= expr BITWISE_AND * expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  45
                qualified_name shift  149
                 function_call shift  134

State 45:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
     (92) expr ::= expr BITWISE_AND expr *
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 92

State 46:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= expr BITWISE_OR * expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  47
                qualified_name shift  149
                 function_call shift  134

State 47:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
     (93) expr ::= expr BITWISE_OR expr *
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 93

State 48:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= expr BITWISE_XOR * expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  49
                qualified_name shift  149
                 function_call shift  134

State 49:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
     (94) expr ::= expr BITWISE_XOR expr *
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 94

State 50:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= expr EQUALS * expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  51
                qualified_name shift  149
                 function_call shift  134

State 51:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
     (95) expr ::= expr EQUALS expr *
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 95

State 52:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= expr NOTEQUALS * expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  53
                qualified_name shift  149
                 function_call shift  134

State 53:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
     (96) expr ::= expr NOTEQUALS expr *
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 96

State 54:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= expr LESS * expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  55
                qualified_name shift  149
                 function_call shift  134

State 55:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
     (97) expr ::= expr LESS expr *
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 97

State 56:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= expr GREATER * expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  57
                qualified_name shift  149
                 function_call shift  134

State 57:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
     (98) expr ::= expr GREATER expr *
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 98

State 58:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= expr GREATEREQUAL * expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  59
                qualified_name shift  149
                 function_call shift  134

State 59:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
     (99) expr ::= expr GREATEREQUAL expr *
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 99

State 60:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= expr LESSEQUAL * expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  61
                qualified_name shift  149
                 function_call shift  134

State 61:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
    (100) expr ::= expr LESSEQUAL expr *
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 100

State 62:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= expr LIKE * expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  63
                qualified_name shift  149
                 function_call shift  134

State 63:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
    (101) expr ::= expr LIKE expr *
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 101

State 64:
          expr ::= expr NOT * LIKE expr
          expr ::= expr NOT * ILIKE expr
          expr ::= expr NOT * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr NOT * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE

                          LIKE shift  65
                         ILIKE shift  202
                            IN shift  204

State 65:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= expr NOT LIKE * expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  66
                qualified_name shift  149
                 function_call shift  134

State 66:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
    (102) expr ::= expr NOT LIKE expr *
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           NOT shift  64
                     {default} reduce 102

State 67:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= expr ILIKE * expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  68
                qualified_name shift  149
                 function_call shift  134

State 68:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
    (103) expr ::= expr ILIKE expr *
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 103

State 69:
          expr ::= expr IN * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr IN * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  70

State 70:
          select_statement ::= * select_clause where_clause group_clause having_clause order_clause select_limit_clause
          select_clause ::= * SELECT distinct_all column_list FROM associated_name_list join_list_or_null
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr IN PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr IN PARENTHESES_OPEN * select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  144
                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                        SELECT shift  71
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
              select_statement shift  200
                 select_clause shift  6
                          expr shift  138
                qualified_name shift  149
                 argument_list shift  198
                 function_call shift  134
                 argument_item shift  158

State 71:
          select_clause ::= SELECT * distinct_all column_list FROM associated_name_list join_list_or_null
          distinct_all ::= * DISTINCT
          distinct_all ::= * ALL
      (9) distinct_all ::= *

                      DISTINCT shift  196
                           ALL shift  197
                  distinct_all shift  72
                     {default} reduce 9

State 72:
          select_clause ::= SELECT distinct_all * column_list FROM associated_name_list join_list_or_null
          column_list ::= * column_list COMMA column_item
          column_list ::= * column_item
          column_item ::= * TIMES
          column_item ::= * IDENTIFIER DOT TIMES
          column_item ::= * expr AS IDENTIFIER
          column_item ::= * expr IDENTIFIER
          column_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  187
                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  188
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                   column_list shift  73
                   column_item shift  195
                          expr shift  191
                qualified_name shift  149
                 function_call shift  134

State 73:
          select_clause ::= SELECT distinct_all column_list * FROM associated_name_list join_list_or_null
          column_list ::= column_list * COMMA column_item

                         COMMA shift  185
                          FROM shift  74

State 74:
          select_clause ::= SELECT distinct_all column_list FROM * associated_name_list join_list_or_null
          associated_name_list ::= * associated_name_list COMMA associated_name
          associated_name_list ::= * associated_name
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  84
          associated_name_list shift  75
               associated_name shift  184
     aliased_or_qualified_name shift  79
                qualified_name shift  83

State 75:
          select_clause ::= SELECT distinct_all column_list FROM associated_name_list * join_list_or_null
          associated_name_list ::= associated_name_list * COMMA associated_name
          join_list_or_null ::= * join_list
     (20) join_list_or_null ::= *
          join_list ::= * join_list join_item
          join_list ::= * join_item
          join_item ::= * join_clause
          join_clause ::= * join_type aliased_or_qualified_name join_associated_name join_conditions
          join_type ::= * INNER JOIN
          join_type ::= * CROSS JOIN
          join_type ::= * LEFT OUTER JOIN
          join_type ::= * LEFT JOIN
          join_type ::= * RIGHT OUTER JOIN
          join_type ::= * RIGHT JOIN
          join_type ::= * FULL OUTER JOIN
          join_type ::= * FULL JOIN
          join_type ::= * JOIN

                         COMMA shift  77
                         INNER shift  166
                          JOIN shift  182
                         CROSS shift  168
                          LEFT shift  170
                         RIGHT shift  174
                          FULL shift  178
             join_list_or_null shift  76
                     join_list shift  87
                     join_item shift  183
                   join_clause shift  89
                     join_type shift  90
                     {default} reduce 20

State 76:
      (6) select_clause ::= SELECT distinct_all column_list FROM associated_name_list join_list_or_null *

                     {default} reduce 6

State 77:
          associated_name_list ::= associated_name_list COMMA * associated_name
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  84
               associated_name shift  78
     aliased_or_qualified_name shift  79
                qualified_name shift  83

State 78:
     (17) associated_name_list ::= associated_name_list COMMA associated_name *

                     {default} reduce 17

State 79:
          associated_name ::= aliased_or_qualified_name * AS IDENTIFIER
          associated_name ::= aliased_or_qualified_name * IDENTIFIER
     (57) associated_name ::= aliased_or_qualified_name *

                    IDENTIFIER shift  82
                            AS shift  80
                     {default} reduce 57

State 80:
          associated_name ::= aliased_or_qualified_name AS * IDENTIFIER

                    IDENTIFIER shift  81

State 81:
     (55) associated_name ::= aliased_or_qualified_name AS IDENTIFIER *

                     {default} reduce 55

State 82:
     (56) associated_name ::= aliased_or_qualified_name IDENTIFIER *

                     {default} reduce 56

State 83:
     (58) aliased_or_qualified_name ::= qualified_name *

                     {default} reduce 58

State 84:
          qualified_name ::= IDENTIFIER * DOT IDENTIFIER
    (145) qualified_name ::= IDENTIFIER *

                           DOT shift  85
                     {default} reduce 145

State 85:
          qualified_name ::= IDENTIFIER DOT * IDENTIFIER

                    IDENTIFIER shift  86

State 86:
    (144) qualified_name ::= IDENTIFIER DOT IDENTIFIER *

                     {default} reduce 144

State 87:
     (19) join_list_or_null ::= join_list *
          join_list ::= join_list * join_item
          join_item ::= * join_clause
          join_clause ::= * join_type aliased_or_qualified_name join_associated_name join_conditions
          join_type ::= * INNER JOIN
          join_type ::= * CROSS JOIN
          join_type ::= * LEFT OUTER JOIN
          join_type ::= * LEFT JOIN
          join_type ::= * RIGHT OUTER JOIN
          join_type ::= * RIGHT JOIN
          join_type ::= * FULL OUTER JOIN
          join_type ::= * FULL JOIN
          join_type ::= * JOIN

                         INNER shift  166
                          JOIN shift  182
                         CROSS shift  168
                          LEFT shift  170
                         RIGHT shift  174
                          FULL shift  178
                     join_item shift  88
                   join_clause shift  89
                     join_type shift  90
                     {default} reduce 19

State 88:
     (21) join_list ::= join_list join_item *

                     {default} reduce 21

State 89:
     (23) join_item ::= join_clause *

                     {default} reduce 23

State 90:
          join_clause ::= join_type * aliased_or_qualified_name join_associated_name join_conditions
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  84
     aliased_or_qualified_name shift  91
                qualified_name shift  83

State 91:
          join_clause ::= join_type aliased_or_qualified_name * join_associated_name join_conditions
          join_associated_name ::= * AS IDENTIFIER
          join_associated_name ::= * IDENTIFIER
     (27) join_associated_name ::= *

                    IDENTIFIER shift  165
                            AS shift  163
          join_associated_name shift  92
                     {default} reduce 27

State 92:
          join_clause ::= join_type aliased_or_qualified_name join_associated_name * join_conditions
          join_conditions ::= * ON expr
     (38) join_conditions ::= *

                            ON shift  94
               join_conditions shift  93
                     {default} reduce 38

State 93:
     (24) join_clause ::= join_type aliased_or_qualified_name join_associated_name join_conditions *

                     {default} reduce 24

State 94:
          join_conditions ::= ON * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  95
                qualified_name shift  149
                 function_call shift  134

State 95:
     (37) join_conditions ::= ON expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 37

State 96:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= expr AGAINST * expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  97
                qualified_name shift  149
                 function_call shift  134

State 97:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
    (111) expr ::= expr AGAINST expr *
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 111

State 98:
          expr ::= expr IS * NULL
          expr ::= expr IS * NOT NULL

                           NOT shift  100
                          NULL shift  99

State 99:
    (129) expr ::= expr IS NULL *

                     {default} reduce 129

State 100:
          expr ::= expr IS NOT * NULL

                          NULL shift  101

State 101:
    (130) expr ::= expr IS NOT NULL *

                     {default} reduce 130

State 102:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= expr BETWEEN * expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  103
                qualified_name shift  149
                 function_call shift  134

State 103:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
    (131) expr ::= expr BETWEEN expr *

                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 131

State 104:
          select_statement ::= * select_clause where_clause group_clause having_clause order_clause select_limit_clause
          select_clause ::= * SELECT distinct_all column_list FROM associated_name_list join_list_or_null
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= PARENTHESES_OPEN * select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= PARENTHESES_OPEN * expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                        SELECT shift  71
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
              select_statement shift  107
                 select_clause shift  6
                          expr shift  105
                qualified_name shift  149
                 function_call shift  134

State 105:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
          expr ::= PARENTHESES_OPEN expr * PARENTHESES_CLOSE

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
             PARENTHESES_CLOSE shift  106

State 106:
    (134) expr ::= PARENTHESES_OPEN expr PARENTHESES_CLOSE *

                     {default} reduce 134

State 107:
          expr ::= PARENTHESES_OPEN select_statement * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  108

State 108:
    (107) expr ::= PARENTHESES_OPEN select_statement PARENTHESES_CLOSE *

                     {default} reduce 107

State 109:
          expr ::= EXISTS * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  110

State 110:
          select_statement ::= * select_clause where_clause group_clause having_clause order_clause select_limit_clause
          select_clause ::= * SELECT distinct_all column_list FROM associated_name_list join_list_or_null
          expr ::= EXISTS PARENTHESES_OPEN * select_statement PARENTHESES_CLOSE

                        SELECT shift  71
              select_statement shift  111
                 select_clause shift  6

State 111:
          expr ::= EXISTS PARENTHESES_OPEN select_statement * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  112

State 112:
    (110) expr ::= EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE *

                     {default} reduce 110

State 113:
          expr ::= CAST * PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  114

State 114:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= CAST PARENTHESES_OPEN * expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  115
                qualified_name shift  149
                 function_call shift  134

State 115:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= CAST PARENTHESES_OPEN expr * AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                            AS shift  116

State 116:
          expr ::= CAST PARENTHESES_OPEN expr AS * IDENTIFIER PARENTHESES_CLOSE

                    IDENTIFIER shift  117

State 117:
          expr ::= CAST PARENTHESES_OPEN expr AS IDENTIFIER * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  118

State 118:
    (112) expr ::= CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE *

                     {default} reduce 112

State 119:
          expr ::= CONVERT * PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  120

State 120:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= CONVERT PARENTHESES_OPEN * expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  121
                qualified_name shift  149
                 function_call shift  134

State 121:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= CONVERT PARENTHESES_OPEN expr * USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                         USING shift  122

State 122:
          expr ::= CONVERT PARENTHESES_OPEN expr USING * IDENTIFIER PARENTHESES_CLOSE

                    IDENTIFIER shift  123

State 123:
          expr ::= CONVERT PARENTHESES_OPEN expr USING IDENTIFIER * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  124

State 124:
    (113) expr ::= CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE *

                     {default} reduce 113

State 125:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= CASE * expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  126
                qualified_name shift  149
                 function_call shift  134

State 126:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= CASE expr * when_clauses END
          when_clauses ::= * when_clauses when_clause
          when_clauses ::= * when_clause
          when_clause ::= * WHEN expr THEN expr
          when_clause ::= * ELSE expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                          WHEN shift  130
                          ELSE shift  160
                  when_clauses shift  127
                   when_clause shift  162

State 127:
          expr ::= CASE expr when_clauses * END
          when_clauses ::= when_clauses * when_clause
          when_clause ::= * WHEN expr THEN expr
          when_clause ::= * ELSE expr

                           END shift  128
                          WHEN shift  130
                          ELSE shift  160
                   when_clause shift  129

State 128:
    (114) expr ::= CASE expr when_clauses END *

                     {default} reduce 114

State 129:
    (115) when_clauses ::= when_clauses when_clause *

                     {default} reduce 115

State 130:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          when_clause ::= WHEN * expr THEN expr
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  131
                qualified_name shift  149
                 function_call shift  134

State 131:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          when_clause ::= WHEN expr * THEN expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                          THEN shift  132

State 132:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          when_clause ::= WHEN expr THEN * expr
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  133
                qualified_name shift  149
                 function_call shift  134

State 133:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
    (117) when_clause ::= WHEN expr THEN expr *
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 117

State 134:
    (119) expr ::= function_call *

                     {default} reduce 119

State 135:
          function_call ::= IDENTIFIER * PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          qualified_name ::= IDENTIFIER * DOT IDENTIFIER
    (145) qualified_name ::= IDENTIFIER *

                           DOT shift  85
              PARENTHESES_OPEN shift  136
                     {default} reduce 145

State 136:
          function_call ::= IDENTIFIER PARENTHESES_OPEN * distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          distinct_or_null ::= * DISTINCT
    (122) distinct_or_null ::= *

                      DISTINCT shift  159
              distinct_or_null shift  137
                     {default} reduce 122

State 137:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          function_call ::= IDENTIFIER PARENTHESES_OPEN distinct_or_null * argument_list_or_null PARENTHESES_CLOSE
          argument_list_or_null ::= * argument_list
    (124) argument_list_or_null ::= *
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  144
                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
             PARENTHESES_CLOSE reduce 124
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  138
                qualified_name shift  149
                 argument_list shift  141
                 function_call shift  134
         argument_list_or_null shift  139
                 argument_item shift  158

State 138:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
    (128) argument_item ::= expr *
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 128

State 139:
          function_call ::= IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  140

State 140:
    (120) function_call ::= IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE *

                     {default} reduce 120

State 141:
    (123) argument_list_or_null ::= argument_list *
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  142
             PARENTHESES_CLOSE reduce 123

State 142:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          argument_list ::= argument_list COMMA * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  144
                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  138
                qualified_name shift  149
                 function_call shift  134
                 argument_item shift  143

State 143:
    (125) argument_list ::= argument_list COMMA argument_item *

                     {default} reduce 125

State 144:
    (127) argument_item ::= TIMES *

                     {default} reduce 127

State 145:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  146
                qualified_name shift  149
                 function_call shift  134

State 146:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
    (132) expr ::= NOT expr *

                           NOT shift  64
                     {default} reduce 132

State 147:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= BITWISE_NOT * expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  148
                qualified_name shift  149
                 function_call shift  134

State 148:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
    (133) expr ::= BITWISE_NOT expr *

                           NOT shift  64
                     {default} reduce 133

State 149:
    (135) expr ::= qualified_name *

                     {default} reduce 135

State 150:
    (136) expr ::= INTEGER *

                     {default} reduce 136

State 151:
    (137) expr ::= STRING *

                     {default} reduce 137

State 152:
    (138) expr ::= DOUBLE *

                     {default} reduce 138

State 153:
    (139) expr ::= NULL *

                     {default} reduce 139

State 154:
    (140) expr ::= TRUE *

                     {default} reduce 140

State 155:
    (141) expr ::= FALSE *

                     {default} reduce 141

State 156:
    (142) expr ::= NPLACEHOLDER *

                     {default} reduce 142

State 157:
    (143) expr ::= SPLACEHOLDER *

                     {default} reduce 143

State 158:
    (126) argument_list ::= argument_item *

                     {default} reduce 126

State 159:
    (121) distinct_or_null ::= DISTINCT *

                     {default} reduce 121

State 160:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          when_clause ::= ELSE * expr
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  161
                qualified_name shift  149
                 function_call shift  134

State 161:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
    (118) when_clause ::= ELSE expr *
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 118

State 162:
    (116) when_clauses ::= when_clause *

                     {default} reduce 116

State 163:
          join_associated_name ::= AS * IDENTIFIER

                    IDENTIFIER shift  164

State 164:
     (25) join_associated_name ::= AS IDENTIFIER *

                     {default} reduce 25

State 165:
     (26) join_associated_name ::= IDENTIFIER *

                     {default} reduce 26

State 166:
          join_type ::= INNER * JOIN

                          JOIN shift  167

State 167:
     (28) join_type ::= INNER JOIN *

                    IDENTIFIER reduce 28

State 168:
          join_type ::= CROSS * JOIN

                          JOIN shift  169

State 169:
     (29) join_type ::= CROSS JOIN *

                    IDENTIFIER reduce 29

State 170:
          join_type ::= LEFT * OUTER JOIN
          join_type ::= LEFT * JOIN

                          JOIN shift  173
                         OUTER shift  171

State 171:
          join_type ::= LEFT OUTER * JOIN

                          JOIN shift  172

State 172:
     (30) join_type ::= LEFT OUTER JOIN *

                    IDENTIFIER reduce 30

State 173:
     (31) join_type ::= LEFT JOIN *

                    IDENTIFIER reduce 31

State 174:
          join_type ::= RIGHT * OUTER JOIN
          join_type ::= RIGHT * JOIN

                          JOIN shift  177
                         OUTER shift  175

State 175:
          join_type ::= RIGHT OUTER * JOIN

                          JOIN shift  176

State 176:
     (32) join_type ::= RIGHT OUTER JOIN *

                    IDENTIFIER reduce 32

State 177:
     (33) join_type ::= RIGHT JOIN *

                    IDENTIFIER reduce 33

State 178:
          join_type ::= FULL * OUTER JOIN
          join_type ::= FULL * JOIN

                          JOIN shift  181
                         OUTER shift  179

State 179:
          join_type ::= FULL OUTER * JOIN

                          JOIN shift  180

State 180:
     (34) join_type ::= FULL OUTER JOIN *

                    IDENTIFIER reduce 34

State 181:
     (35) join_type ::= FULL JOIN *

                    IDENTIFIER reduce 35

State 182:
     (36) join_type ::= JOIN *

                    IDENTIFIER reduce 36

State 183:
     (22) join_list ::= join_item *

                     {default} reduce 22

State 184:
     (18) associated_name_list ::= associated_name *

                     {default} reduce 18

State 185:
          column_list ::= column_list COMMA * column_item
          column_item ::= * TIMES
          column_item ::= * IDENTIFIER DOT TIMES
          column_item ::= * expr AS IDENTIFIER
          column_item ::= * expr IDENTIFIER
          column_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  187
                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  188
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                   column_item shift  186
                          expr shift  191
                qualified_name shift  149
                 function_call shift  134

State 186:
     (10) column_list ::= column_list COMMA column_item *

                     {default} reduce 10

State 187:
     (12) column_item ::= TIMES *

                     {default} reduce 12

State 188:
          column_item ::= IDENTIFIER * DOT TIMES
          function_call ::= IDENTIFIER * PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          qualified_name ::= IDENTIFIER * DOT IDENTIFIER
    (145) qualified_name ::= IDENTIFIER *

                           DOT shift  189
              PARENTHESES_OPEN shift  136
                     {default} reduce 145

State 189:
          column_item ::= IDENTIFIER DOT * TIMES
          qualified_name ::= IDENTIFIER DOT * IDENTIFIER

                         TIMES shift  190
                    IDENTIFIER shift  86

State 190:
     (13) column_item ::= IDENTIFIER DOT TIMES *

                     {default} reduce 13

State 191:
          column_item ::= expr * AS IDENTIFIER
          column_item ::= expr * IDENTIFIER
     (16) column_item ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                    IDENTIFIER shift  194
                            AS shift  192
                     {default} reduce 16

State 192:
          column_item ::= expr AS * IDENTIFIER

                    IDENTIFIER shift  193

State 193:
     (14) column_item ::= expr AS IDENTIFIER *

                     {default} reduce 14

State 194:
     (15) column_item ::= expr IDENTIFIER *

                     {default} reduce 15

State 195:
     (11) column_list ::= column_item *

                     {default} reduce 11

State 196:
      (7) distinct_all ::= DISTINCT *

                     {default} reduce 7

State 197:
      (8) distinct_all ::= ALL *

                     {default} reduce 8

State 198:
          expr ::= expr IN PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  142
             PARENTHESES_CLOSE shift  199

State 199:
    (105) expr ::= expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

                     {default} reduce 105

State 200:
          expr ::= expr IN PARENTHESES_OPEN select_statement * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  201

State 201:
    (108) expr ::= expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE *

                     {default} reduce 108

State 202:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= expr NOT ILIKE * expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  203
                qualified_name shift  149
                 function_call shift  134

State 203:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
    (104) expr ::= expr NOT ILIKE expr *
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           NOT shift  64
                     {default} reduce 104

State 204:
          expr ::= expr NOT IN * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr NOT IN * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  205

State 205:
          select_statement ::= * select_clause where_clause group_clause having_clause order_clause select_limit_clause
          select_clause ::= * SELECT distinct_all column_list FROM associated_name_list join_list_or_null
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr NOT IN PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr NOT IN PARENTHESES_OPEN * select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  144
                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                        SELECT shift  71
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
              select_statement shift  208
                 select_clause shift  6
                          expr shift  138
                qualified_name shift  149
                 argument_list shift  206
                 function_call shift  134
                 argument_item shift  158

State 206:
          expr ::= expr NOT IN PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  142
             PARENTHESES_CLOSE shift  207

State 207:
    (106) expr ::= expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

                     {default} reduce 106

State 208:
          expr ::= expr NOT IN PARENTHESES_OPEN select_statement * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  209

State 209:
    (109) expr ::= expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE *

                     {default} reduce 109

State 210:
          expr ::= expr * MINUS expr
     (85) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 85

State 211:
     (64) order_list ::= order_item *

                     {default} reduce 64

State 212:
          having_clause ::= HAVING * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  213
                qualified_name shift  149
                 function_call shift  134

State 213:
     (73) having_clause ::= HAVING expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 73

State 214:
          group_clause ::= GROUP * BY group_list

                            BY shift  215

State 215:
          group_clause ::= GROUP BY * group_list
          group_list ::= * group_list COMMA group_item
          group_list ::= * group_item
          group_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  219
                qualified_name shift  149
                    group_list shift  216
                    group_item shift  220
                 function_call shift  134

State 216:
     (68) group_clause ::= GROUP BY group_list *
          group_list ::= group_list * COMMA group_item

                         COMMA shift  217
                     {default} reduce 68

State 217:
          group_list ::= group_list COMMA * group_item
          group_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  219
                qualified_name shift  149
                    group_item shift  218
                 function_call shift  134

State 218:
     (70) group_list ::= group_list COMMA group_item *

                     {default} reduce 70

State 219:
     (72) group_item ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 72

State 220:
     (71) group_list ::= group_item *

                     {default} reduce 71

State 221:
          where_clause ::= WHERE * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  222
                qualified_name shift  149
                 function_call shift  134

State 222:
     (59) where_clause ::= WHERE expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 59

State 223:
          insert_statement ::= INSERT * INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= INSERT * INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE

                          INTO shift  224

State 224:
          insert_statement ::= INSERT INTO * aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= INSERT INTO * aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  84
     aliased_or_qualified_name shift  225
                qualified_name shift  83

State 225:
          insert_statement ::= INSERT INTO aliased_or_qualified_name * VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= INSERT INTO aliased_or_qualified_name * PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE

                        VALUES shift  226
              PARENTHESES_OPEN shift  234

State 226:
          insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES * PARENTHESES_OPEN values_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  227

State 227:
          insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN * values_list PARENTHESES_CLOSE
          values_list ::= * values_list COMMA value_item
          values_list ::= * value_item
          value_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  232
                   values_list shift  228
                    value_item shift  233
                qualified_name shift  149
                 function_call shift  134

State 228:
          insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list * PARENTHESES_CLOSE
          values_list ::= values_list * COMMA value_item

                         COMMA shift  230
             PARENTHESES_CLOSE shift  229

State 229:
     (39) insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE *

                             $ reduce 39

State 230:
          values_list ::= values_list COMMA * value_item
          value_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  232
                    value_item shift  231
                qualified_name shift  149
                 function_call shift  134

State 231:
     (41) values_list ::= values_list COMMA value_item *

                     {default} reduce 41

State 232:
     (43) value_item ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 43

State 233:
     (42) values_list ::= value_item *

                     {default} reduce 42

State 234:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN * field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          field_list ::= * field_list COMMA field_item
          field_list ::= * field_item
          field_item ::= * IDENTIFIER

                    IDENTIFIER shift  243
                    field_list shift  235
                    field_item shift  244

State 235:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list * PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          field_list ::= field_list * COMMA field_item

                         COMMA shift  241
             PARENTHESES_CLOSE shift  236

State 236:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE * VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE

                        VALUES shift  237

State 237:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES * PARENTHESES_OPEN values_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  238

State 238:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN * values_list PARENTHESES_CLOSE
          values_list ::= * values_list COMMA value_item
          values_list ::= * value_item
          value_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  232
                   values_list shift  239
                    value_item shift  233
                qualified_name shift  149
                 function_call shift  134

State 239:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list * PARENTHESES_CLOSE
          values_list ::= values_list * COMMA value_item

                         COMMA shift  230
             PARENTHESES_CLOSE shift  240

State 240:
     (40) insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE *

                             $ reduce 40

State 241:
          field_list ::= field_list COMMA * field_item
          field_item ::= * IDENTIFIER

                    IDENTIFIER shift  243
                    field_item shift  242

State 242:
     (44) field_list ::= field_list COMMA field_item *

                     {default} reduce 44

State 243:
     (46) field_item ::= IDENTIFIER *

                     {default} reduce 46

State 244:
     (45) field_list ::= field_item *

                     {default} reduce 45

State 245:
          update_statement ::= update_clause * where_clause limit_clause
          where_clause ::= * WHERE expr
     (60) where_clause ::= *

                         WHERE shift  221
                  where_clause shift  246
                     {default} reduce 60

State 246:
          update_statement ::= update_clause where_clause * limit_clause
          limit_clause ::= * LIMIT integer_or_placeholder
     (80) limit_clause ::= *

                             $ reduce 80
                         LIMIT shift  248
                  limit_clause shift  247

State 247:
     (47) update_statement ::= update_clause where_clause limit_clause *

                             $ reduce 47

State 248:
          limit_clause ::= LIMIT * integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  16
                  NPLACEHOLDER shift  17
                  SPLACEHOLDER shift  18
        integer_or_placeholder shift  249

State 249:
     (79) limit_clause ::= LIMIT integer_or_placeholder *

                             $ reduce 79

State 250:
          update_clause ::= UPDATE * associated_name SET update_item_list
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  84
               associated_name shift  251
     aliased_or_qualified_name shift  79
                qualified_name shift  83

State 251:
          update_clause ::= UPDATE associated_name * SET update_item_list

                           SET shift  252

State 252:
          update_clause ::= UPDATE associated_name SET * update_item_list
          update_item_list ::= * update_item_list COMMA update_item
          update_item_list ::= * update_item
          update_item ::= * qualified_name EQUALS new_value
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  84
              update_item_list shift  253
                   update_item shift  260
                qualified_name shift  256

State 253:
     (48) update_clause ::= UPDATE associated_name SET update_item_list *
          update_item_list ::= update_item_list * COMMA update_item

                         COMMA shift  254
                     {default} reduce 48

State 254:
          update_item_list ::= update_item_list COMMA * update_item
          update_item ::= * qualified_name EQUALS new_value
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  84
                   update_item shift  255
                qualified_name shift  256

State 255:
     (49) update_item_list ::= update_item_list COMMA update_item *

                     {default} reduce 49

State 256:
          update_item ::= qualified_name * EQUALS new_value

                        EQUALS shift  257

State 257:
          update_item ::= qualified_name EQUALS * new_value
          new_value ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * EXISTS PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CASE expr when_clauses END
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  145
                   BITWISE_NOT shift  147
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  104
                       INTEGER shift  150
                  NPLACEHOLDER shift  156
                  SPLACEHOLDER shift  157
                        EXISTS shift  109
                          CAST shift  113
                       CONVERT shift  119
                          CASE shift  125
                          NULL shift  153
                        STRING shift  151
                        DOUBLE shift  152
                          TRUE shift  154
                         FALSE shift  155
                          expr shift  259
                qualified_name shift  149
                     new_value shift  258
                 function_call shift  134

State 258:
     (51) update_item ::= qualified_name EQUALS new_value *

                     {default} reduce 51

State 259:
     (52) new_value ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN select_statement PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  96
                       BETWEEN shift  102
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  98
                            IN shift  69
                           NOT shift  64
                     {default} reduce 52

State 260:
     (50) update_item_list ::= update_item *

                     {default} reduce 50

State 261:
          delete_statement ::= delete_clause * where_clause limit_clause
          where_clause ::= * WHERE expr
     (60) where_clause ::= *

                         WHERE shift  221
                  where_clause shift  262
                     {default} reduce 60

State 262:
          delete_statement ::= delete_clause where_clause * limit_clause
          limit_clause ::= * LIMIT integer_or_placeholder
     (80) limit_clause ::= *

                             $ reduce 80
                         LIMIT shift  248
                  limit_clause shift  263

State 263:
     (53) delete_statement ::= delete_clause where_clause limit_clause *

                             $ reduce 53

State 264:
          delete_clause ::= DELETE * FROM associated_name

                          FROM shift  265

State 265:
          delete_clause ::= DELETE FROM * associated_name
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  84
               associated_name shift  266
     aliased_or_qualified_name shift  79
                qualified_name shift  83

State 266:
     (54) delete_clause ::= DELETE FROM associated_name *

                     {default} reduce 54

