 State 0:
          program ::= * volt_language
          volt_language ::= * statement_list
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                       program accept
                 volt_language shift  1
                statement_list shift  2
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 1:
      (0) program ::= volt_language *

                             $ reduce 0

State 2:
      (1) volt_language ::= statement_list *
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                             $ reduce 1
                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 3:
      (2) statement_list ::= statement_list statement *

                     {default} reduce 2

State 4:
      (4) statement ::= raw_fragment *

                     {default} reduce 4

State 5:
      (5) statement ::= if_statement *

                     {default} reduce 5

State 6:
      (6) statement ::= elseif_statement *

                     {default} reduce 6

State 7:
      (7) statement ::= elsefor_statement *

                     {default} reduce 7

State 8:
      (8) statement ::= for_statement *

                     {default} reduce 8

State 9:
      (9) statement ::= set_statement *

                     {default} reduce 9

State 10:
     (10) statement ::= echo_statement *

                     {default} reduce 10

State 11:
     (11) statement ::= block_statement *

                     {default} reduce 11

State 12:
     (12) statement ::= cache_statement *

                     {default} reduce 12

State 13:
     (13) statement ::= extends_statement *

                     {default} reduce 13

State 14:
     (14) statement ::= include_statement *

                     {default} reduce 14

State 15:
     (15) statement ::= do_statement *

                     {default} reduce 15

State 16:
     (16) statement ::= autoescape_statement *

                     {default} reduce 16

State 17:
     (17) statement ::= break_statement *

                     {default} reduce 17

State 18:
     (18) statement ::= continue_statement *

                     {default} reduce 18

State 19:
     (19) statement ::= empty_statement *

                     {default} reduce 19

State 20:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 21:
          if_statement ::= OPEN_DELIMITER IF * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  22
                 function_call shift  107

State 22:
          if_statement ::= OPEN_DELIMITER IF expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
               CLOSE_DELIMITER shift  23

State 23:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  24
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 24:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  25
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 25:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                         ENDIF shift  26
                          ELSE shift  28
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 26:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  27

State 27:
     (20) if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER *

                     {default} reduce 20

State 28:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER

               CLOSE_DELIMITER shift  29

State 29:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  30
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 30:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  31
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 31:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                         ENDIF shift  32
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 32:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  33

State 33:
     (21) if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER *

                     {default} reduce 21

State 34:
          elseif_statement ::= OPEN_DELIMITER ELSEIF * expr CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  35
                 function_call shift  107

State 35:
          elseif_statement ::= OPEN_DELIMITER ELSEIF expr * CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
               CLOSE_DELIMITER shift  36

State 36:
     (22) elseif_statement ::= OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER *

                     {default} reduce 22

State 37:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  141
                 function_call shift  107

State 38:
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  39
                 function_call shift  107

State 39:
     (43) expr ::= MINUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 43

State 40:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  140
                 function_call shift  107

State 41:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  42
                 function_call shift  107

State 42:
     (44) expr ::= PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 44

State 43:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  44
                 function_call shift  107

State 44:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
     (47) expr ::= expr TIMES expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 47

State 45:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  46
                 function_call shift  107

State 46:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
     (48) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 48

State 47:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  48
                 function_call shift  107

State 48:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (49) expr ::= expr MOD expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 49

State 49:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  50
                 function_call shift  107

State 50:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
     (50) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 50

State 51:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  52
                 function_call shift  107

State 52:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (51) expr ::= expr OR expr *
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 51

State 53:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= expr CONCAT * expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  54
                 function_call shift  107

State 54:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
     (52) expr ::= expr CONCAT expr *
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 52

State 55:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= expr PIPE * expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  56
                 function_call shift  107

State 56:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
     (53) expr ::= expr PIPE expr *
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 53

State 57:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= expr RANGE * expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  58
                 function_call shift  107

State 58:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
     (54) expr ::= expr RANGE expr *
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 54

State 59:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= expr EQUALS * expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  60
                 function_call shift  107

State 60:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
     (55) expr ::= expr EQUALS expr *
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 55

State 61:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= expr IS * NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= expr IS * DEFINED
          expr ::= * expr IS expr
          expr ::= expr IS * expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  137
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                       DEFINED shift  139
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  62
                 function_call shift  107

State 62:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
     (58) expr ::= expr IS expr *
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 58

State 63:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= expr NOTEQUALS * expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  64
                 function_call shift  107

State 64:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
     (59) expr ::= expr NOTEQUALS expr *
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 59

State 65:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= expr IDENTICAL * expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  66
                 function_call shift  107

State 66:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
     (60) expr ::= expr IDENTICAL expr *
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 60

State 67:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= expr NOTIDENTICAL * expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  68
                 function_call shift  107

State 68:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
     (61) expr ::= expr NOTIDENTICAL expr *
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 61

State 69:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= expr LESS * expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  70
                 function_call shift  107

State 70:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
     (62) expr ::= expr LESS expr *
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 62

State 71:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= expr GREATER * expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  72
                 function_call shift  107

State 72:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
     (63) expr ::= expr GREATER expr *
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 63

State 73:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= expr GREATEREQUAL * expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  74
                 function_call shift  107

State 74:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
     (64) expr ::= expr GREATEREQUAL expr *
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 64

State 75:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= expr LESSEQUAL * expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  76
                 function_call shift  107

State 76:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
     (65) expr ::= expr LESSEQUAL expr *
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 65

State 77:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= expr DOT * expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  78
                 function_call shift  107

State 78:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
     (66) expr ::= expr DOT expr *
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                     {default} reduce 66

State 79:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= expr IN * expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  80
                 function_call shift  107

State 80:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
     (67) expr ::= expr IN expr *
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 67

State 81:
          expr ::= expr NOT * IN expr

                            IN shift  82

State 82:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= expr NOT IN * expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  83
                 function_call shift  107

State 83:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
     (68) expr ::= expr NOT IN expr *
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 68

State 84:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN * expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN * COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN * slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN * slice_offset COLON slice_offset SBRACKET_CLOSE
          slice_offset ::= * INTEGER
          slice_offset ::= * IDENTIFIER
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                         COLON shift  125
                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  136
                       INTEGER shift  135
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  85
                  slice_offset shift  130
                 function_call shift  107

State 85:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN expr * SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                SBRACKET_CLOSE shift  86

State 86:
     (72) expr ::= expr SBRACKET_OPEN expr SBRACKET_CLOSE *

                     {default} reduce 72

State 87:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= expr QUESTION * expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  88
                 function_call shift  107

State 88:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr QUESTION expr * COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                         COLON shift  89
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77

State 89:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= expr QUESTION expr COLON * expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  90
                 function_call shift  107

State 90:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
     (73) expr ::= expr QUESTION expr COLON expr *
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 73

State 91:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          function_call ::= expr PARENTHESES_OPEN * PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * expr
          argument_item ::= * STRING COLON expr
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  120
                         FALSE shift  113
                          TRUE shift  114
             PARENTHESES_CLOSE shift  123
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  92
                 function_call shift  107
                 argument_list shift  116
                 argument_item shift  124

State 92:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE
     (88) argument_item ::= expr *

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 88

State 93:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  94
                 function_call shift  107

State 94:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
     (69) expr ::= NOT expr *
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 69

State 95:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= PARENTHESES_OPEN * expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  96
                 function_call shift  107

State 96:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= PARENTHESES_OPEN expr * PARENTHESES_CLOSE
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
             PARENTHESES_CLOSE shift  97

State 97:
     (70) expr ::= PARENTHESES_OPEN expr PARENTHESES_CLOSE *

                     {default} reduce 70

State 98:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= SBRACKET_OPEN * array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          array_list ::= * array_list COMMA array_item
          array_list ::= * array_item
          array_item ::= * STRING COLON expr
          array_item ::= * expr
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  104
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  99
                    array_list shift  100
                    array_item shift  115
                 function_call shift  107

State 99:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
     (82) array_item ::= expr *
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 82

State 100:
          expr ::= SBRACKET_OPEN array_list * SBRACKET_CLOSE
          array_list ::= array_list * COMMA array_item

                         COMMA shift  102
                SBRACKET_CLOSE shift  101

State 101:
     (71) expr ::= SBRACKET_OPEN array_list SBRACKET_CLOSE *

                     {default} reduce 71

State 102:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          array_list ::= array_list COMMA * array_item
          array_item ::= * STRING COLON expr
          array_item ::= * expr
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  104
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  99
                    array_item shift  103
                 function_call shift  107

State 103:
     (79) array_list ::= array_list COMMA array_item *

                     {default} reduce 79

State 104:
          array_item ::= STRING * COLON expr
     (92) expr ::= STRING *

                         COLON shift  105
                     {default} reduce 92

State 105:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          array_item ::= STRING COLON * expr
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  106
                 function_call shift  107

State 106:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
     (81) array_item ::= STRING COLON expr *
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 81

State 107:
     (83) expr ::= function_call *

                     {default} reduce 83

State 108:
     (90) expr ::= IDENTIFIER *

                     {default} reduce 90

State 109:
     (91) expr ::= INTEGER *

                     {default} reduce 91

State 110:
     (92) expr ::= STRING *

                     {default} reduce 92

State 111:
     (93) expr ::= DOUBLE *

                     {default} reduce 93

State 112:
     (94) expr ::= NULL *

                     {default} reduce 94

State 113:
     (95) expr ::= FALSE *

                     {default} reduce 95

State 114:
     (96) expr ::= TRUE *

                     {default} reduce 96

State 115:
     (80) array_list ::= array_item *

                     {default} reduce 80

State 116:
          function_call ::= expr PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  118
             PARENTHESES_CLOSE shift  117

State 117:
     (84) function_call ::= expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

                     {default} reduce 84

State 118:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          argument_list ::= argument_list COMMA * argument_item
          argument_item ::= * expr
          argument_item ::= * STRING COLON expr
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  120
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  92
                 function_call shift  107
                 argument_item shift  119

State 119:
     (86) argument_list ::= argument_list COMMA argument_item *

                     {default} reduce 86

State 120:
          argument_item ::= STRING * COLON expr
     (92) expr ::= STRING *

                         COLON shift  121
                     {default} reduce 92

State 121:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          argument_item ::= STRING COLON * expr
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  122
                 function_call shift  107

State 122:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE
     (89) argument_item ::= STRING COLON expr *

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 89

State 123:
     (85) function_call ::= expr PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 85

State 124:
     (87) argument_list ::= argument_item *

                     {default} reduce 87

State 125:
          expr ::= expr SBRACKET_OPEN COLON * slice_offset SBRACKET_CLOSE
          slice_offset ::= * INTEGER
          slice_offset ::= * IDENTIFIER

                    IDENTIFIER shift  129
                       INTEGER shift  128
                  slice_offset shift  126

State 126:
          expr ::= expr SBRACKET_OPEN COLON slice_offset * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  127

State 127:
     (74) expr ::= expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE *

                     {default} reduce 74

State 128:
     (77) slice_offset ::= INTEGER *

                SBRACKET_CLOSE reduce 77

State 129:
     (78) slice_offset ::= IDENTIFIER *

                SBRACKET_CLOSE reduce 78

State 130:
          expr ::= expr SBRACKET_OPEN slice_offset * COLON SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN slice_offset * COLON slice_offset SBRACKET_CLOSE

                         COLON shift  131

State 131:
          expr ::= expr SBRACKET_OPEN slice_offset COLON * SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN slice_offset COLON * slice_offset SBRACKET_CLOSE
          slice_offset ::= * INTEGER
          slice_offset ::= * IDENTIFIER

                    IDENTIFIER shift  129
                       INTEGER shift  128
                SBRACKET_CLOSE shift  132
                  slice_offset shift  133

State 132:
     (75) expr ::= expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE *

                     {default} reduce 75

State 133:
          expr ::= expr SBRACKET_OPEN slice_offset COLON slice_offset * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  134

State 134:
     (76) expr ::= expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE *

                     {default} reduce 76

State 135:
     (77) slice_offset ::= INTEGER *
     (91) expr ::= INTEGER *

                         COLON reduce 77
                     {default} reduce 91

State 136:
     (78) slice_offset ::= IDENTIFIER *
     (90) expr ::= IDENTIFIER *

                         COLON reduce 78
                     {default} reduce 90

State 137:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= expr IS NOT * DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                       DEFINED shift  138
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  94
                 function_call shift  107

State 138:
     (56) expr ::= expr IS NOT DEFINED *

                     {default} reduce 56

State 139:
     (57) expr ::= expr IS DEFINED *

                     {default} reduce 57

State 140:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
     (46) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 46

State 141:
          expr ::= expr * MINUS expr
     (45) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                     {default} reduce 45

State 142:
          elsefor_statement ::= OPEN_DELIMITER ELSEFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  143

State 143:
     (23) elsefor_statement ::= OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER *

                     {default} reduce 23

State 144:
          for_statement ::= OPEN_DELIMITER FOR * IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR * IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR * IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR * IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER

                    IDENTIFIER shift  145

State 145:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER * IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER * IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER * COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER * COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER

                         COMMA shift  220
                            IN shift  146

State 146:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN * expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  147
                 function_call shift  107

State 147:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                            IF shift  213
               CLOSE_DELIMITER shift  148

State 148:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  149
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 149:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  150
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 150:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                        ENDFOR shift  151
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 151:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  152

State 152:
     (24) for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER *

                     {default} reduce 24

State 153:
          set_statement ::= OPEN_DELIMITER SET * IDENTIFIER ASSIGN expr CLOSE_DELIMITER

                    IDENTIFIER shift  154

State 154:
          set_statement ::= OPEN_DELIMITER SET IDENTIFIER * ASSIGN expr CLOSE_DELIMITER

                        ASSIGN shift  155

State 155:
          set_statement ::= OPEN_DELIMITER SET IDENTIFIER ASSIGN * expr CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  156
                 function_call shift  107

State 156:
          set_statement ::= OPEN_DELIMITER SET IDENTIFIER ASSIGN expr * CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
               CLOSE_DELIMITER shift  157

State 157:
     (28) set_statement ::= OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER *

                     {default} reduce 28

State 158:
     (29) empty_statement ::= OPEN_DELIMITER CLOSE_DELIMITER *

                     {default} reduce 29

State 159:
          block_statement ::= OPEN_DELIMITER BLOCK * IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK * IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER

                    IDENTIFIER shift  160

State 160:
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER * CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER

               CLOSE_DELIMITER shift  161

State 161:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER * OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  210
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  162
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 162:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  163
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 163:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                           SET shift  153
                         BLOCK shift  159
                      ENDBLOCK shift  164
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 164:
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  165

State 165:
     (31) block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER *

                     {default} reduce 31

State 166:
          cache_statement ::= OPEN_DELIMITER CACHE * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE * expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  167
                 function_call shift  107

State 167:
          cache_statement ::= OPEN_DELIMITER CACHE expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr * INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
               CLOSE_DELIMITER shift  168
                       INTEGER shift  204

State 168:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  169
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 169:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  170
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 170:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                      ENDCACHE shift  171
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 171:
          cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  172

State 172:
     (33) cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER *

                     {default} reduce 33

State 173:
          extends_statement ::= OPEN_DELIMITER EXTENDS * STRING CLOSE_DELIMITER

                        STRING shift  174

State 174:
          extends_statement ::= OPEN_DELIMITER EXTENDS STRING * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  175

State 175:
     (35) extends_statement ::= OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER *

                     {default} reduce 35

State 176:
          include_statement ::= OPEN_DELIMITER INCLUDE * STRING CLOSE_DELIMITER

                        STRING shift  177

State 177:
          include_statement ::= OPEN_DELIMITER INCLUDE STRING * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  178

State 178:
     (36) include_statement ::= OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER *

                     {default} reduce 36

State 179:
          do_statement ::= OPEN_DELIMITER DO * expr CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  180
                 function_call shift  107

State 180:
          do_statement ::= OPEN_DELIMITER DO expr * CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
               CLOSE_DELIMITER shift  181

State 181:
     (37) do_statement ::= OPEN_DELIMITER DO expr CLOSE_DELIMITER *

                     {default} reduce 37

State 182:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE * FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE * TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER

                         FALSE shift  183
                          TRUE shift  198

State 183:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER

               CLOSE_DELIMITER shift  184

State 184:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  185
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 185:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  186
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 186:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                 ENDAUTOESCAPE shift  187
                         BREAK shift  189
                      CONTINUE shift  191

State 187:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  188

State 188:
     (38) autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER *

                     {default} reduce 38

State 189:
          break_statement ::= OPEN_DELIMITER BREAK * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  190

State 190:
     (40) break_statement ::= OPEN_DELIMITER BREAK CLOSE_DELIMITER *

                     {default} reduce 40

State 191:
          continue_statement ::= OPEN_DELIMITER CONTINUE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  192

State 192:
     (41) continue_statement ::= OPEN_DELIMITER CONTINUE CLOSE_DELIMITER *

                     {default} reduce 41

State 193:
          echo_statement ::= OPEN_EDELIMITER * expr CLOSE_EDELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  194
                 function_call shift  107

State 194:
          echo_statement ::= OPEN_EDELIMITER expr * CLOSE_EDELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
              CLOSE_EDELIMITER shift  195

State 195:
     (30) echo_statement ::= OPEN_EDELIMITER expr CLOSE_EDELIMITER *

                     {default} reduce 30

State 196:
     (42) raw_fragment ::= RAW_FRAGMENT *

                     {default} reduce 42

State 197:
      (3) statement_list ::= statement *

                     {default} reduce 3

State 198:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER

               CLOSE_DELIMITER shift  199

State 199:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  200
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 200:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  201
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 201:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                 ENDAUTOESCAPE shift  202
                         BREAK shift  189
                      CONTINUE shift  191

State 202:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  203

State 203:
     (39) autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER *

                     {default} reduce 39

State 204:
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER

               CLOSE_DELIMITER shift  205

State 205:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  206
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 206:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  207
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 207:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                      ENDCACHE shift  208
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 208:
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  209

State 209:
     (34) cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER *

                     {default} reduce 34

State 210:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER * ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                           SET shift  153
                         BLOCK shift  159
                      ENDBLOCK shift  211
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 211:
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  212

State 212:
     (32) block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER *

                     {default} reduce 32

State 213:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  214
                 function_call shift  107

State 214:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
               CLOSE_DELIMITER shift  215

State 215:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  216
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 216:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  217
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 217:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                        ENDFOR shift  218
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 218:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  219

State 219:
     (25) for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER *

                     {default} reduce 25

State 220:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA * IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA * IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER

                    IDENTIFIER shift  221

State 221:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER * IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER * IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER

                            IN shift  222

State 222:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN * expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  223
                 function_call shift  107

State 223:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
                            IF shift  229
               CLOSE_DELIMITER shift  224

State 224:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  225
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 225:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  226
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 226:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                        ENDFOR shift  227
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 227:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  228

State 228:
     (26) for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER *

                     {default} reduce 26

State 229:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                 SBRACKET_OPEN shift  98
                          PLUS shift  41
                         MINUS shift  38
                           NOT shift  93
              PARENTHESES_OPEN shift  95
                    IDENTIFIER shift  108
                       INTEGER shift  109
                        STRING shift  110
                         FALSE shift  113
                          TRUE shift  114
                        DOUBLE shift  111
                          NULL shift  112
                          expr shift  230
                 function_call shift  107

State 230:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  79
                      QUESTION shift  87
                 SBRACKET_OPEN shift  84
                         RANGE shift  57
                           AND shift  49
                            OR shift  51
                            IS shift  61
                        EQUALS shift  59
                     NOTEQUALS shift  63
                          LESS shift  69
                       GREATER shift  71
                  GREATEREQUAL shift  73
                     LESSEQUAL shift  75
                     IDENTICAL shift  65
                  NOTIDENTICAL shift  67
                        DIVIDE shift  45
                         TIMES shift  43
                           MOD shift  47
                          PLUS shift  40
                         MINUS shift  37
                        CONCAT shift  53
                          PIPE shift  55
                           NOT shift  81
              PARENTHESES_OPEN shift  91
                           DOT shift  77
               CLOSE_DELIMITER shift  231

State 231:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  20
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                statement_list shift  232
                     statement shift  197
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 232:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * empty_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  233
               OPEN_EDELIMITER shift  193
                  RAW_FRAGMENT shift  196
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
          autoescape_statement shift  16
               break_statement shift  17
            continue_statement shift  18
               empty_statement shift  19

State 233:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET IDENTIFIER ASSIGN expr CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE STRING CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  21
               CLOSE_DELIMITER shift  158
                        ELSEIF shift  34
                       ELSEFOR shift  142
                           FOR shift  144
                        ENDFOR shift  234
                           SET shift  153
                         BLOCK shift  159
                         CACHE shift  166
                       EXTENDS shift  173
                       INCLUDE shift  176
                            DO shift  179
                    AUTOESCAPE shift  182
                         BREAK shift  189
                      CONTINUE shift  191

State 234:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  235

State 235:
     (27) for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER *

                     {default} reduce 27

